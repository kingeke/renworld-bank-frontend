{"version":3,"sources":["routes/NavLinks.js","services/AuthService.js","routes/ApiLinks.js","components/includes/Notifications.js","components/layouts/CustomInputs.js","components/layouts/CustomLayouts.js","components/assets/Parsers.js","components/layouts/Forms.js","components/assets/NavBar.js","store/actions/authActions.js","store/reducers/types.js","components/assets/Pictures.js","components/layouts/TopBar.js","components/includes/ErrorBoundary.js","components/assets/Footer.js","components/layouts/MainLayout.js","components/pages/Login.js","store/actions/formActions.js","components/pages/SignUp.js","components/pages/Page404.js","services/UserPrivateRouter.js","store/actions/dashboardActions.js","store/actions/transactionActions.js","components/pages/dashboard/components/CardOverview.js","components/layouts/TableLayout.js","components/layouts/TransactionTableComponent.js","components/pages/dashboard/components/RecentTransactions.js","components/pages/dashboard/Dashboard.js","store/actions/profileActions.js","components/pages/profile/EditProfile.js","components/pages/profile/ChangePassword.js","components/layouts/AccountsTableComponent.js","components/pages/accounts/Accounts.js","store/actions/accountActions.js","components/pages/accounts/components/AccountLayout.js","components/pages/accounts/components/TransactionsTable.js","components/pages/accounts/Account.js","components/layouts/Filters.js","components/pages/transactions/Transactions.js","components/pages/transactions/components/TransactionLayout.js","components/pages/transactions/Transaction.js","components/pages/transactions/Transfer.js","components/pages/accounts/FundAccount.js","components/pages/accounts/CreateAccount.js","routes/Routes.js","store/actions/websiteActions.js","App.js","components/includes/ScrollToTop.js","store/reducers/accountsReducer.js","store/reducers/authReducer.js","store/reducers/dashboardReducer.js","store/reducers/formReducer.js","store/reducers/transactionsReducer.js","store/reducers/websiteReducer.js","store/reducers/rootReducer.js","index.js"],"names":["routeLinks","index","login","signUp","editProfile","changePassword","transfer","accounts","account","transactions","transaction","UserAuth","isAuthenticated","authenticate","user","this","localStorage","setItem","JSON","stringify","signOut","removeItem","getUser","parse","getItem","getHeaders","token","server","window","location","origin","api","apiLinks","website","logOut","register","fetchProfile","updateProfile","dashboard","require","showNotification","message","type","delay","content","icon","title","$","notify","animate","enter","exit","placement","from","align","Label","label","name","required","className","htmlFor","CustomForm","placeholder","minLength","onChange","value","id","equalTo","maxLength","min","max","onKeyUp","Form","Group","Control","data-parsley-equalto","CustomButton","block","variant","loading","onClick","disabled","iconRight","show","size","showLoadingText","Button","CustomSelect","options","useLabel","withOthers","as","map","option","key","Hr","width","color","style","maxWidth","borderWidth","borderColor","Loader","position","Array","fill","v","i","Pagination","item","pageCount","handlePageClick","showPage","pageLoading","total","previousLabel","nextLabel","marginPagesDisplayed","pageRangeDisplayed","breakClassName","forcePage","current_page","onPageChange","data","containerClassName","subContainerClassName","activeClassName","pageClassName","pageLinkClassName","previousClassName","nextClassName","previousLinkClassName","nextLinkClassName","disabledClassName","disableInitialCallback","FormatNumber","number","withNaira","formatedNumber","parseFloat","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","FormatDate","date","withTime","timeOnly","fromNow","moment","format","UserAccountsSelect","accountSelect","push","account_number","account_type","balance","Email","email","Name","Amount","amount","Balance","Narration","narration","Password","password","ConfirmPassword","password_confirmation","FromAccount","from_account","ToAccount","to_account","BankName","bank_name","banks","AccountType","account_types","AccountName","account_name","AccountNumber","FormLayout","children","Row","Col","lg","span","offset","md","connect","users","auth","dispatch","headers","then","Axios","post","response","catch","error","Navbar","bg","expand","exact","to","Toggle","aria-controls","Collapse","Nav","NavDropdown","alignRight","avatar","pageTitle","sm","src","height","alt","ErrorBoundary","state","hasError","info","setState","Container","Card","Body","props","Component","Footer","MainLayout","Login","formRef","React","createRef","initialState","formSending","componentDidMount","history","UNSAFE_componentWillReceiveProps","nextProps","formError","handleChange","e","target","handleDummyAccount","handleSubmit","form","current","parsley","isTest","isValid","preventDefault","ref","onSubmit","varian","app","status","loginAction","formAction","method","url","SignUp","formSuccess","Page404","Jumbotron","UserPrivateRouter","component","rest","render","pathname","getTransaction","transaction_ref","get","cards","body","xs","TableLayout","columns","onlyTable","setTableRef","column","dataTable","fnDestroy","fn","DataTable","isDataTable","dom","buttons","TransactionTableComponent","fields","actions","serial","handleView","previous_balance","current_balance","created_at","updated_at","loaded","recent_transactions","Title","Dashboard","getDashboard","userProfile","EditProfile","reset","update","ChangePassword","currentPassword","AccountsTableComponent","handleStatus","active","transactions_count","Accounts","page","getAccounts","selected","confirm","accountStatus","Badge","last_page","params","AccountLayout","accountLayout","TransactionsTable","Account","match","getAccount","transactions_page","filterOptions","handleFilterChange","handleFilter","resetFilters","filters","filterLoading","Transactions","getTransactions","TransactionLayout","Transaction","Transfer","FundAccount","fund","CreateAccount","create","Routes","path","App","getWebsite","userLoading","websiteLoading","ScrollToTop","prevProps","scrollTo","withRouter","setAccounts","action","setAccount","accountsDefault","accountDefault","accountsReducer","setUser","authDefault","authReducer","setDashboard","dashboardDefault","dashboardReducer","formDefault","formReducer","setTransactions","setTransaction","transactionsDefault","transactionDefault","transactionsReducer","setWebsite","websiteDefault","websiteReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0bbc3704.chunk.js","sourcesContent":["export const routeLinks = {\r\n    index: '/',\r\n    login: '/login',\r\n    signUp: '/sign-up',\r\n    editProfile: '/edit-profile',\r\n    changePassword: '/change-password',\r\n    transfer: '/transfer',\r\n    accounts: '/accounts',\r\n    account: '/account',\r\n    transactions: '/transactions',\r\n    transaction: '/transaction',\r\n}","export const UserAuth = {\r\n    isAuthenticated: false,\r\n    async authenticate(user) {\r\n        this.isAuthenticated = true\r\n        localStorage.setItem('user', JSON.stringify(user))\r\n    },\r\n    async signOut() {\r\n        localStorage.removeItem('user')\r\n        this.isAuthenticated = false\r\n    },\r\n    getUser() {\r\n        let user = JSON.parse(localStorage.getItem('user'))\r\n        if (user) {\r\n            return user\r\n        }\r\n        return false\r\n    },\r\n    getHeaders() {\r\n        let user = JSON.parse(localStorage.getItem('user'))\r\n        if (user) {\r\n            return {\r\n                'headers': {\r\n                    'Authorization': `Bearer ${user.token}`,\r\n                    'Content-Type': 'Application/json',\r\n                    'Accept': 'Application/json',\r\n                }\r\n            }\r\n        }\r\n        return false\r\n    }\r\n}","const server = window.location.origin === 'http://localhost:3000' ? 'local' : 'live'\r\nexport const endpoint = server === 'local' ? 'http://127.0.0.1:8000' : 'https://renworld-bank-backend.vercel.app'\r\nexport const api = `${endpoint}/backend`\r\n\r\nexport const apiLinks = {\r\n    website: `${api}/website`,\r\n    login: `${api}/auth/login`,\r\n    logOut: `${api}/auth/log-out`,\r\n    register: `${api}/auth/sign-up`,\r\n    fetchProfile: `${api}/profile`,\r\n    changePassword: `${api}/profile/change-password`,\r\n    updateProfile: `${api}/profile/update-profile`,\r\n    dashboard: `${api}/dashboard`,\r\n    accounts: `${api}/accounts`,\r\n    account: `${api}/account`,\r\n    transactions: `${api}/transactions`,\r\n    transaction: `${api}/transaction`,\r\n}","import $ from 'jquery'\r\nrequire('bootstrap-notify')\r\n\r\nexport const showNotification = (message, type, delay = 3000) => {\r\n\r\n    var content = {\r\n        message,\r\n        icon: 'fa fa-bell',\r\n        title: 'Notification:'\r\n    };\r\n\r\n    $.notify(content, {\r\n        type,\r\n        animate: {\r\n            enter: 'animated slideInUp',\r\n            exit: ''\r\n        },\r\n        placement: {\r\n            from: 'bottom',\r\n            align: 'right'\r\n        },\r\n        delay\r\n    });\r\n}","import React from 'react';\r\nimport { Button, Form } from \"react-bootstrap\";\r\n\r\nexport const Label = ({ label, name, required = false, className = \"form-control-label\" }) => (\r\n    <label htmlFor={label} className={className}>{name}:{required && <span className=\"text-danger\">*</span>}</label>\r\n)\r\n\r\nexport const CustomForm = ({ className, label, type, placeholder, minLength, name, onChange, value, required = true, id, equalTo, maxLength, min, max, onKeyUp }) => (\r\n    <Form.Group>\r\n        {\r\n            label && <Form.Label>{label}: {required && <span className=\"text-danger\">*</span>}</Form.Label>\r\n        }\r\n        <Form.Control onKeyUp={onKeyUp} className={className} id={id} type={type} placeholder={placeholder} required={required} minLength={minLength} onChange={onChange} name={name} value={value} data-parsley-equalto={equalTo} maxLength={maxLength} min={min} max={max} />\r\n    </Form.Group>\r\n)\r\n\r\nexport const CustomTextArea = ({ formRef, className, label, rows = \"3\", placeholder, minLength, name, onChange, value, required = true }) => (\r\n    <Form.Group>\r\n        {\r\n            label &&\r\n            <Form.Label>{label}:  {required && <span className=\"text-danger\">*</span>}</Form.Label>\r\n        }\r\n        <Form.Control ref={formRef} className={className} as=\"textarea\" rows={rows} placeholder={placeholder} required={required} minLength={minLength} name={name} onChange={onChange} value={value} />\r\n    </Form.Group>\r\n)\r\n\r\nexport const CustomButton = ({ block = false, variant, title, icon, loading = false, onClick, disabled = false, className, iconRight = false, type, show = true, size, showLoadingText = true }) => (\r\n    <Form.Group>\r\n        {\r\n            show &&\r\n            <Button size={size} variant={variant} type={type} block={block} disabled={loading ? true : (disabled ? disabled : false)} onClick={onClick} className={`${className} shadow-sm`}>\r\n                {\r\n                    icon && !iconRight && <i className={`fas fa-fw fa-${loading ? 'spinner fa-spin' : icon}`}></i>\r\n                }\r\n                {loading && showLoadingText ? ' Loading' : ` ${title}`}\r\n                {\r\n                    icon && iconRight && <i className={`fas fa-fw fa-${loading ? 'spinner fa-spin' : icon}`}></i>\r\n                }\r\n            </Button>\r\n        }\r\n    </Form.Group>\r\n)\r\n\r\nexport const CustomSelect = ({ label, placeholder, name, onChange, value, options, required = true, useLabel = false, withOthers = false }) => (\r\n    <Form.Group>\r\n        {\r\n            label && <Form.Label>{label}:  {required && <span className=\"text-danger\">*</span>}</Form.Label>\r\n        }\r\n        <Form.Control as=\"select\" onChange={onChange} value={value} name={name} required={required}>\r\n            <option value=\"\">{placeholder}</option>\r\n            {\r\n                options.map((option, index) => (\r\n                    <option value={useLabel ? option : option.value} key={index} className=\"text-capitalize\">{useLabel ? option : option.label}</option>\r\n                ))\r\n            }\r\n            {\r\n                withOthers && <option value=\"others\">Others</option>\r\n            }\r\n        </Form.Control>\r\n    </Form.Group>\r\n)","import React, { Fragment } from 'react';\r\nimport ReactPaginate from 'react-paginate';\r\n\r\nexport const Hr = ({ width = '100px', color = '#f05f40', align = 'center' }) => (\r\n    <hr align={align} style={{ maxWidth: width, borderWidth: '3px', borderColor: color }} />\r\n)\r\n\r\nexport const Loader = ({ show = true, position = 'center' }) => {\r\n    return (\r\n        <Fragment>\r\n            {\r\n                show &&\r\n                <div className={`d-flex justify-content-${position}`}>\r\n                    <div className=\"loader\">\r\n                        {\r\n                            new Array(8).fill(0).map((v, i) => (<div key={i}></div>))\r\n                        }\r\n                    </div>\r\n                </div>\r\n            }\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport const Pagination = ({ item, pageCount, handlePageClick, position = 'left', showPage = false, pageLoading }) => (\r\n    <Fragment>\r\n        {\r\n            item.total > 0 && pageCount > 1 &&\r\n            <Fragment>\r\n                {\r\n                    showPage &&\r\n                    <p>Page</p>\r\n                }\r\n                <ReactPaginate\r\n                    previousLabel={'‹'}\r\n                    nextLabel={'›'}\r\n                    marginPagesDisplayed={1}\r\n                    pageRangeDisplayed={5}\r\n                    breakClassName={'break-me'}\r\n                    forcePage={item.current_page - 1}\r\n                    pageCount={pageCount}\r\n                    onPageChange={(data) => handlePageClick(data)}\r\n                    containerClassName={`pagination justify-content-${position} mt-3`}\r\n                    subContainerClassName={'page-item'}\r\n                    activeClassName={'active'}\r\n                    pageClassName={'page-item'}\r\n                    pageLinkClassName={'page-link'}\r\n                    previousClassName={'page-item'}\r\n                    nextClassName={'page-item'}\r\n                    previousLinkClassName={'page-link'}\r\n                    nextLinkClassName={'page-link'}\r\n                    disabledClassName={'disabled'}\r\n                    disableInitialCallback={true}\r\n                />\r\n                {\r\n                    pageLoading &&\r\n                    <Loader position={position} show={pageLoading} />\r\n                }\r\n            </Fragment>\r\n        }\r\n    </Fragment>\r\n)","import moment from \"moment\"\r\n\r\nexport const FormatNumber = ({ number, withNaira = false }) => {\r\n    let naira = \"\\u20A6\"\r\n    let formatedNumber = parseFloat(number).toLocaleString(undefined, { minimumFractionDigits: withNaira ? 2 : 0, maximumFractionDigits: withNaira ? 2 : 0 })\r\n    let result = withNaira ? naira + formatedNumber : formatedNumber\r\n    return (\r\n        result\r\n    )\r\n}\r\n\r\nexport const FormatDate = ({ date, withTime = false, timeOnly = false, fromNow = false }) => {\r\n    return (\r\n        fromNow ? moment(date).fromNow() : timeOnly ? moment(date).format('LT') : moment(date).format(`${withTime ? 'Do MMM, YYYY - LT' : 'Do MMM, YYYY'}`)\r\n    )\r\n}\r\n\r\nexport const UserAccountsSelect = (accounts) => {\r\n    var accountSelect = []\r\n\r\n    accounts.map((account) => {\r\n        return accountSelect.push({\r\n            label: `${account.account_number} - ${account.account_type} - ${FormatNumber({ number: account.balance, withNaira: true })}`,\r\n            value: account.account_number\r\n        })\r\n    })\r\n\r\n    return accountSelect\r\n}","import React from 'react';\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { CustomForm, CustomSelect } from \"./CustomInputs\";\r\nimport { UserAccountsSelect } from '../assets/Parsers';\r\n\r\nexport const Email = ({ label = \"Email\", onChange, email, placeholder = \"Enter your email\" }) => (\r\n    <CustomForm label={label} type=\"email\" placeholder={placeholder} name=\"email\" onChange={onChange} value={email} />\r\n)\r\n\r\nexport const Name = ({ onChange, name, placeholder = \"Enter your name\", label = \"Fullname\" }) => (\r\n    <CustomForm label={label} type=\"text\" placeholder={placeholder} minLength=\"3\" name=\"name\" onChange={onChange} value={name} />\r\n)\r\n\r\nexport const Amount = ({ onChange, amount, placeholder = \"Enter amount\", label = \"Amount\" }) => (\r\n    <CustomForm label={label} type=\"number\" placeholder={placeholder} name=\"amount\" onChange={onChange} value={amount} />\r\n)\r\n\r\nexport const Balance = ({ onChange, balance, placeholder = \"Enter starting balance\", label = \"Balance\" }) => (\r\n    <CustomForm label={label} type=\"number\" placeholder={placeholder} name=\"balance\" onChange={onChange} value={balance} />\r\n)\r\n\r\nexport const Narration = ({ onChange, narration, placeholder = \"Enter narration\", label = \"Narration\" }) => (\r\n    <CustomForm label={label} type=\"text\" placeholder={placeholder} name=\"narration\" onChange={onChange} value={narration} required={false} />\r\n)\r\n\r\nexport const Password = ({ id = \"password\", onChange, password, label = \"Password\", placeholder = \"Enter your password\", name = \"password\" }) => (\r\n    <CustomForm id={id} label={label} type=\"password\" placeholder={placeholder} name={name} onChange={onChange} value={password} minLength=\"6\" />\r\n)\r\n\r\nexport const ConfirmPassword = ({ onChange, password_confirmation, placeholder = \"Re-enter your password\" }) => (\r\n    <CustomForm label=\"Confirm Password\" type=\"password\" placeholder={placeholder} name=\"password_confirmation\" onChange={onChange} value={password_confirmation} minLength=\"6\" equalTo=\"#password\" />\r\n)\r\n\r\nexport const FromAccount = ({ name = \"from_account\", label = \"From\", from_account, onChange, placeholder = \"Select account\", accounts }) => (\r\n    <CustomSelect name={name} label={label} onChange={onChange} placeholder={placeholder} options={UserAccountsSelect(accounts)} value={from_account} />\r\n)\r\n\r\nexport const ToAccount = ({ to_account, onChange, placeholder = \"Select account\", accounts }) => (\r\n    <CustomSelect name=\"to_account\" label=\"To\" onChange={onChange} placeholder={placeholder} options={UserAccountsSelect(accounts)} value={to_account} withOthers />\r\n)\r\n\r\nexport const BankName = ({ bank_name, onChange, placeholder = \"Select bank name\", banks }) => (\r\n    <CustomSelect name=\"bank_name\" label=\"Bank Name\" onChange={onChange} placeholder={placeholder} options={banks} value={bank_name} useLabel />\r\n)\r\n\r\nexport const AccountType = ({ account_type, onChange, placeholder = \"Select account type\", account_types }) => (\r\n    <CustomSelect name=\"account_type\" label=\"Account Type\" onChange={onChange} placeholder={placeholder} options={account_types} value={account_type} useLabel />\r\n)\r\n\r\nexport const AccountName = ({ onChange, account_name, placeholder = \"Enter account name\", label = \"Account Name\" }) => (\r\n    <CustomForm label={label} type=\"text\" placeholder={placeholder} minLength=\"3\" name=\"account_name\" onChange={onChange} value={account_name} />\r\n)\r\n\r\nexport const AccountNumber = ({ onChange, account_number, placeholder = \"Enter account number\", label = \"Account Number\" }) => (\r\n    <CustomForm label={label} maxLength=\"10\" type=\"text\" placeholder={placeholder} minLength=\"10\" name=\"account_number\" onChange={onChange} value={account_number} />\r\n)\r\n\r\nexport const FormLayout = ({ children }) => (\r\n    <Row>\r\n        <Col lg={{ span: 6, offset: 3 }} md={{ span: 8, offset: 2 }}>\r\n            {children}\r\n        </Col>\r\n    </Row>\r\n)","import React, { Fragment } from 'react'\r\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { routeLinks } from '../../routes/NavLinks'\r\nimport { connect } from 'react-redux'\r\nimport { logOutAction } from '../../store/actions/authActions'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction NavBar({ user, logOut }) {\r\n    return (\r\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\" className=\"mb-5\">\r\n            <NavLink className=\"navbar-brand\" exact to={routeLinks.index}>RenWorld Bank</NavLink>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"ml-auto\">\r\n                    {\r\n                        !user &&\r\n                        <Fragment>\r\n                            <NavLink className=\"nav-link\" exact to={routeLinks.login}>Login</NavLink>\r\n                            <NavLink className=\"nav-link\" exact to={routeLinks.signUp}>Sign Up</NavLink>\r\n                        </Fragment>\r\n                    }\r\n                    {\r\n                        user &&\r\n                        <Fragment>\r\n                            <NavLink className=\"nav-link\" exact to={routeLinks.index}>Dashboard</NavLink>\r\n                            <NavDropdown title=\"Transactions\" alignRight>\r\n                                <NavLink className=\"dropdown-item\" exact to={routeLinks.transfer}>Transfer Money</NavLink>\r\n                                <NavLink className=\"dropdown-item\" exact to={routeLinks.transactions}>View Transactions</NavLink>\r\n                            </NavDropdown>\r\n                            <NavDropdown title=\"Accounts\" alignRight>\r\n                                <NavLink className=\"dropdown-item\" exact to={`${routeLinks.accounts}/create`}>Create New Account</NavLink>\r\n                                <NavLink className=\"dropdown-item\" exact to={routeLinks.account}>Fund Account</NavLink>\r\n                                <NavLink className=\"dropdown-item\" exact to={routeLinks.accounts}>View Accounts</NavLink>\r\n                            </NavDropdown>\r\n                            <NavDropdown title=\"Profile\" alignRight>\r\n                                <NavLink className=\"dropdown-item\" exact to={routeLinks.editProfile}>Edit Profile</NavLink>\r\n                                <NavLink className=\"dropdown-item\" exact to={routeLinks.changePassword}>Change Password</NavLink>\r\n                                <NavLink className=\"dropdown-item\" exact to={routeLinks.login} onClick={() => logOut()}>Log Out</NavLink>\r\n                            </NavDropdown>\r\n                        </Fragment>\r\n                    }\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar >\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        logOut: () => dispatch(logOutAction())\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ users }) => {\r\n    return {\r\n        user: users.auth.user\r\n    }\r\n}\r\n\r\nNavBar.propTypes = {\r\n    logOut: PropTypes.func,\r\n    user: PropTypes.oneOfType([PropTypes.object, PropTypes.bool])\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar)","import Axios from \"axios\";\r\nimport { SET_USER, AUTH_DEFAULT, FORM_ERROR, FORM_DEFAULT, DASHBOARD_DEFAULT } from \"../reducers/types\";\r\nimport { apiLinks } from \"../../routes/ApiLinks\";\r\nimport { UserAuth } from \"../../services/AuthService\";\r\nimport { showNotification } from \"../../components/includes/Notifications\";\r\n\r\nexport const setUser = (user) => {\r\n    return {\r\n        type: SET_USER,\r\n        user\r\n    }\r\n}\r\n\r\nexport const authDefault = () => {\r\n    return {\r\n        type: AUTH_DEFAULT\r\n    }\r\n}\r\n\r\nexport const loginAction = (data) => {\r\n    return (dispatch) => {\r\n        return Axios.post(apiLinks.login, data).then(\r\n            response => {\r\n                let data = response.data\r\n\r\n                if (data.status === 'success') {\r\n\r\n                    const user = {\r\n                        token: data.token\r\n                    }\r\n\r\n                    UserAuth.authenticate(user).then(() => {\r\n                        return dispatch({\r\n                            type: SET_USER,\r\n                            user: data.user\r\n                        })\r\n                    })\r\n\r\n                }\r\n                else {\r\n\r\n                    showNotification(data.message, 'danger')\r\n\r\n                    dispatch({\r\n                        type: FORM_ERROR,\r\n                        message: data.message\r\n                    })\r\n                }\r\n\r\n                return dispatch({\r\n                    type: FORM_DEFAULT\r\n                })\r\n            }\r\n        ).catch(\r\n            error => {\r\n\r\n                let message = (error.response && error.response.data && error.response.data.message) || error.message\r\n\r\n                showNotification(message, 'danger')\r\n\r\n                dispatch({\r\n                    type: FORM_ERROR,\r\n                    message: message\r\n                })\r\n\r\n                return dispatch({\r\n                    type: FORM_DEFAULT\r\n                })\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nexport const logOutAction = () => {\r\n    return (dispatch) => {\r\n\r\n        var headers = UserAuth.getHeaders()\r\n\r\n        return UserAuth.signOut().then(() => {\r\n\r\n            dispatch({\r\n                type: SET_USER,\r\n                user: false\r\n            })\r\n\r\n            dispatch({\r\n                type: DASHBOARD_DEFAULT\r\n            })\r\n\r\n            return Axios.post(apiLinks.logOut, null, headers).then(\r\n                response => {\r\n                    let data = response.data\r\n\r\n                    return showNotification(data.message, 'success')\r\n                }\r\n            ).catch(\r\n                error => null\r\n            )\r\n        })\r\n    }\r\n}\r\n","//authentication\r\nexport const AUTH_DEFAULT = 'AUTH_DEFAULT'\r\nexport const SET_USER = 'SET_USER'\r\n\r\n//forms\r\nexport const FORM_DEFAULT = 'FORM_DEFAULT'\r\nexport const FORM_SUCCESS = 'FORM_SUCCESS'\r\nexport const FORM_ERROR = 'FORM_ERROR'\r\n\r\n//website\r\nexport const WEBSITE_DEFAULT = 'WEBSITE_DEFAULT'\r\nexport const SET_WEBSITE = 'SET_WEBSITE'\r\n\r\n//dashboard\r\nexport const DASHBOARD_DEFAULT = 'DASHBOARD_DEFAULT'\r\nexport const SET_DASHBOARD = 'SET_DASHBOARD'\r\n\r\n//transactions\r\nexport const TRANSACTIONS_DEFAULT = 'TRANSACTIONS_DEFAULT'\r\nexport const SET_TRANSACTIONS = 'SET_TRANSACTIONS'\r\nexport const TRANSACTION_DEFAULT = 'TRANSACTION_DEFAULT'\r\nexport const SET_TRANSACTION = 'SET_TRANSACTION'\r\n\r\n//accounts\r\nexport const ACCOUNTS_DEFAULT = 'ACCOUNTS_DEFAULT'\r\nexport const SET_ACCOUNTS = 'SET_ACCOUNTS'\r\nexport const ACCOUNT_DEFAULT = 'ACCOUNT_DEFAULT'\r\nexport const SET_ACCOUNT = 'SET_ACCOUNT'","export const avatar = '/avatar.png'","import React from 'react'\r\nimport { avatar } from '../assets/Pictures'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { Row, Col } from 'react-bootstrap'\r\n\r\nexport function TopBar({ pageTitle, user }) {\r\n    return (\r\n        <Row className=\"mb-4\">\r\n            <Col sm={6}>\r\n                <p className=\"text-center text-sm-left text-uppercase font-weight-bold mb-3\">{pageTitle}</p>\r\n            </Col>\r\n            <Col className=\"text-center text-sm-right user-info\">\r\n                <img src={avatar} className=\"img-fluid rounded-circle\" width=\"25\" height=\"25\" alt=\"avatar\" />\r\n                <p className=\"text-uppercase font-weight-bold my-auto ml-2\">{user.name}</p>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ users }) => {\r\n    return {\r\n        user: users.auth.user\r\n    }\r\n}\r\n\r\nTopBar.propTypes = {\r\n    pageTitle: PropTypes.string,\r\n    user: PropTypes.oneOfType([PropTypes.object, PropTypes.bool])\r\n}\r\n\r\nexport default connect(mapStateToProps)(TopBar)\r\n","import React, { Component, Fragment } from 'react'\r\nimport { Card, Container } from 'react-bootstrap'\r\n\r\nexport default class ErrorBoundary extends Component {\r\n\r\n    state = {\r\n        hasError: false\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({\r\n            hasError: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const { hasError } = this.state\r\n\r\n        return (\r\n            <Fragment>\r\n                {\r\n                    hasError ?\r\n                        <Container className=\"my-5\">\r\n                            <Card>\r\n                                <Card.Body>\r\n                                    <p>An unknown error occurred, please refresh the page. If the problem persists, please contact us</p>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Container>\r\n                        : this.props.children\r\n                }\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nexport default function Footer() {\r\n    return (\r\n\r\n        <footer>\r\n            <div className=\"text-center p-3 text-white\">\r\n                <h5>RenWorld Bank&trade; &copy; {moment().format('Y')}</h5>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport NavBar from '../assets/NavBar'\r\nimport { Container } from 'react-bootstrap'\r\nimport { Loader } from './CustomLayouts'\r\nimport TopBar from './TopBar'\r\nimport ErrorBoundary from '../includes/ErrorBoundary'\r\nimport Footer from '../assets/Footer'\r\n\r\nexport default function MainLayout({ show = true, children, pageTitle = false }) {\r\n    return (\r\n        <Fragment>\r\n            <NavBar />\r\n            <Container className=\"mb-5\">\r\n                <ErrorBoundary>\r\n                    {\r\n                        show ?\r\n                            <Fragment>\r\n                                {pageTitle && <TopBar pageTitle={pageTitle} />}\r\n                                {children}\r\n                            </Fragment>\r\n                            : <Loader />\r\n                    }\r\n                </ErrorBoundary>\r\n            </Container>\r\n            <Footer />\r\n        </Fragment>\r\n    )\r\n}","import $ from 'jquery'\r\nimport PropTypes from 'prop-types'\r\nimport React, { Component } from 'react'\r\nimport { Form } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { routeLinks } from '../../routes/NavLinks'\r\nimport { UserAuth } from '../../services/AuthService'\r\nimport { loginAction } from '../../store/actions/authActions'\r\nimport { CustomButton } from '../layouts/CustomInputs'\r\nimport { Hr } from '../layouts/CustomLayouts'\r\nimport { Email, FormLayout, Password } from '../layouts/Forms'\r\nimport MainLayout from '../layouts/MainLayout'\r\nrequire('parsleyjs')\r\n\r\nexport class Login extends Component {\r\n\r\n    formRef = React.createRef()\r\n\r\n    initialState = {\r\n        email: '',\r\n        password: '',\r\n        formSending: false\r\n    }\r\n\r\n    state = this.initialState\r\n\r\n    componentDidMount = () => {\r\n        if (UserAuth.isAuthenticated) {\r\n            this.props.history.push(routeLinks.index)\r\n        }\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\r\n        if (nextProps.formError) {\r\n            this.setState({\r\n                formSending: false\r\n            })\r\n        }\r\n        if (nextProps.user) {\r\n            nextProps.history.push(routeLinks.index)\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleDummyAccount = () => {\r\n        this.setState({\r\n            email: 'user@email.com',\r\n            password: 'password'\r\n        }, () => {\r\n            this.setState({\r\n                formSending: true\r\n            }, () => {\r\n                this.props.login(this.state)\r\n            })\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        var form = $(this.formRef.current).parsley()\r\n\r\n        if (e.isTest || form.isValid()) {\r\n            e.preventDefault()\r\n            this.setState({\r\n                formSending: true\r\n            }, () => {\r\n                this.props.login(this.state)\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <MainLayout>\r\n                <section className=\"container\">\r\n                    <div className=\"text-center\">\r\n                        <h4>Welcome back.</h4>\r\n                        <Hr />\r\n                        <p>Hope you know your credentials.</p>\r\n                    </div>\r\n                    <FormLayout>\r\n                        <Form ref={this.formRef} className=\"form-section\" onSubmit={this.handleSubmit}>\r\n                            <Email email={this.state.email} onChange={this.handleChange} />\r\n                            <Password password={this.state.password} onChange={this.handleChange} />\r\n                            <CustomButton block type=\"submit\" icon='sign-in-alt' loading={this.state.formSending} title=\"Login\" variant=\"success\" onClick={this.handleSubmit} />\r\n                            <div className='mt-5 text-center'>\r\n                                <CustomButton type=\"button\" icon=\"user\" title=\"Use dummy account\" varian=\"info\" onClick={this.handleDummyAccount} />\r\n                            </div>\r\n                        </Form>\r\n                        <div className=\"text-center mt-5\">\r\n                            <p>Don't have an account ? <NavLink exact to={routeLinks.signUp}>Sign Up Now</NavLink></p>\r\n                        </div>\r\n                    </FormLayout>\r\n                </section>\r\n            </MainLayout>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        login: (data) => dispatch(loginAction(data))\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ app, users }) => {\r\n    return {\r\n        formError: app.form.formError,\r\n        user: users.auth.user\r\n    }\r\n}\r\n\r\nLogin.propTypes = {\r\n    user: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\r\n    formError: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n    login: PropTypes.func\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\r\n","import Axios from \"axios\";\r\nimport { FORM_ERROR, FORM_SUCCESS, FORM_DEFAULT } from \"../reducers/types\";\r\nimport { UserAuth } from \"../../services/AuthService\";\r\nimport { showNotification } from \"../../components/includes/Notifications\";\r\n\r\nexport const formAction = (method, url, data) => {\r\n    return (dispatch) => {\r\n\r\n        return Axios({\r\n            method,\r\n            url,\r\n            data,\r\n            headers: UserAuth.getHeaders().headers\r\n        }).then(\r\n            response => {\r\n                let data = response.data\r\n\r\n                if (data.status === 'success') {\r\n\r\n                    showNotification(data.message, 'success')\r\n\r\n                    dispatch({\r\n                        type: FORM_SUCCESS,\r\n                        message: data.message\r\n                    })\r\n                }\r\n                else {\r\n\r\n                    showNotification(data.message, 'danger')\r\n\r\n                    dispatch({\r\n                        type: FORM_ERROR,\r\n                        message: data.message\r\n                    })\r\n                }\r\n\r\n                return dispatch({\r\n                    type: FORM_DEFAULT\r\n                })\r\n            }\r\n        ).catch(\r\n            error => {\r\n\r\n                let message = (error.response && error.response.data && error.response.data.message) || error.message\r\n\r\n                showNotification(message, 'danger')\r\n\r\n                dispatch({\r\n                    type: FORM_ERROR,\r\n                    message: message\r\n                })\r\n\r\n                return dispatch({\r\n                    type: FORM_DEFAULT\r\n                })\r\n            }\r\n        )\r\n    }\r\n}","import $ from 'jquery'\r\nimport PropTypes from 'prop-types'\r\nimport React, { Component } from 'react'\r\nimport { Form } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { apiLinks } from '../../routes/ApiLinks'\r\nimport { routeLinks } from '../../routes/NavLinks'\r\nimport { UserAuth } from '../../services/AuthService'\r\nimport { formAction } from '../../store/actions/formActions'\r\nimport { CustomButton } from '../layouts/CustomInputs'\r\nimport { Hr } from '../layouts/CustomLayouts'\r\nimport { Email, FormLayout, Name, Password } from '../layouts/Forms'\r\nimport MainLayout from '../layouts/MainLayout'\r\nrequire('parsleyjs')\r\n\r\nexport class SignUp extends Component {\r\n\r\n    formRef = React.createRef()\r\n\r\n    initialState = {\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        formSending: false\r\n    }\r\n\r\n    state = this.initialState\r\n\r\n    componentDidMount = () => {\r\n        if (UserAuth.isAuthenticated) {\r\n            this.props.history.push(routeLinks.index)\r\n        }\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\r\n        if (nextProps.formError || nextProps.formSuccess) {\r\n            this.setState({\r\n                formSending: false\r\n            }, () => {\r\n                if (nextProps.formSuccess) {\r\n                    nextProps.history.push('/login')\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        var form = $(this.formRef.current).parsley()\r\n\r\n        if (e.isTest || form.isValid()) {\r\n            e.preventDefault()\r\n            this.setState({\r\n                formSending: true\r\n            }, () => {\r\n                this.props.register(this.state)\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <MainLayout>\r\n                <section className=\"container\">\r\n                    <div className=\"text-center\">\r\n                        <h4>Welcome{this.state.name ? ` ${this.state.name}` : ''}, we're glad you're joining us.</h4>\r\n                        <Hr />\r\n                        <p>We just need some details and we'll get you right to your dashboard.</p>\r\n                    </div>\r\n                    <FormLayout>\r\n                        <Form ref={this.formRef} className=\"form-section\" onSubmit={this.handleSubmit}>\r\n                            <Name name={this.state.name} onChange={this.handleChange} />\r\n                            <Email email={this.state.email} onChange={this.handleChange} />\r\n                            <Password password={this.state.password} onChange={this.handleChange} />\r\n                            <CustomButton type=\"submit\" variant=\"success\" icon=\"check\" title=\"Sign Up\" loading={this.state.formSending} onClick={this.handleSubmit} />\r\n                        </Form>\r\n                    </FormLayout>\r\n                </section>\r\n            </MainLayout>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        register: (data) => dispatch(formAction('post', apiLinks.register, data))\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ app }) => {\r\n    return {\r\n        formError: app.form.formError,\r\n        formSuccess: app.form.formSuccess\r\n    }\r\n}\r\n\r\nSignUp.propTypes = {\r\n    formError: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n    formSuccess: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n    register: PropTypes.func\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)","import React from 'react'\r\nimport { Jumbotron } from 'react-bootstrap'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { routeLinks } from '../../routes/NavLinks'\r\nimport MainLayout from '../layouts/MainLayout'\r\n\r\nexport default function Page404() {\r\n    return (\r\n        <MainLayout>\r\n            <Jumbotron>\r\n                <h1>404 Page Not Found</h1>\r\n                <p>Please use this button to go back to home page.</p>\r\n                <p>\r\n                    <NavLink exact to={routeLinks.index} className=\"btn btn-primary\"><i className=\"fa fas fa-home\"></i> Home</NavLink>\r\n                </p>\r\n            </Jumbotron>\r\n        </MainLayout>\r\n    )\r\n}\r\n","import { Route, Redirect } from 'react-router-dom'\r\nimport React from 'react'\r\nimport { UserAuth } from './AuthService'\r\n\r\nexport default function UserPrivateRouter({ component: Component, ...rest }) {\r\n\r\n    return (\r\n        <Route {...rest} render={props => {\r\n            if (UserAuth.isAuthenticated) {\r\n                return (\r\n                    <Component {...props} />\r\n                )\r\n            }\r\n            else {\r\n                return (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: \"/login\",\r\n                            state: { from: props.location }\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        }\r\n\r\n\r\n        } />\r\n    )\r\n}","import Axios from \"axios\";\r\nimport { showNotification } from \"../../components/includes/Notifications\";\r\nimport { apiLinks } from \"../../routes/ApiLinks\";\r\nimport { DASHBOARD_DEFAULT, SET_DASHBOARD } from \"../reducers/types\";\r\nimport { UserAuth } from \"../../services/AuthService\";\r\n\r\nexport const dashboardDefault = () => {\r\n    return {\r\n        type: DASHBOARD_DEFAULT\r\n    }\r\n}\r\n\r\nexport const getDashboard = () => {\r\n    return (dispatch) => {\r\n        return Axios.get(apiLinks.dashboard, UserAuth.getHeaders()).then(\r\n            response => {\r\n\r\n                let data = response.data\r\n\r\n                if (data.status === 'success') {\r\n                    return dispatch({\r\n                        type: SET_DASHBOARD,\r\n                        transactions: data.transactions,\r\n                        accounts: data.accounts,\r\n                        balance: data.balance,\r\n                        recent_transactions: data.recent_transactions,\r\n                    })\r\n\r\n                }\r\n                else {\r\n                    return dispatch({\r\n                        type: DASHBOARD_DEFAULT\r\n                    })\r\n                }\r\n            }\r\n        ).catch(\r\n            error => {\r\n                let message = (error.response && error.response.data && error.response.data.message) || error.message\r\n\r\n                showNotification(message, 'danger');\r\n\r\n                return dispatch({\r\n                    type: DASHBOARD_DEFAULT\r\n                })\r\n            }\r\n        )\r\n    }\r\n}","import Axios from \"axios\";\r\nimport { showNotification } from \"../../components/includes/Notifications\";\r\nimport { apiLinks } from \"../../routes/ApiLinks\";\r\nimport { UserAuth } from \"../../services/AuthService\";\r\nimport { SET_TRANSACTION, SET_TRANSACTIONS, TRANSACTIONS_DEFAULT, TRANSACTION_DEFAULT } from \"../reducers/types\";\r\n\r\nexport const transactionsDefault = () => {\r\n    return {\r\n        type: TRANSACTIONS_DEFAULT\r\n    }\r\n}\r\n\r\nexport const transactionDefault = () => {\r\n    return {\r\n        type: TRANSACTION_DEFAULT\r\n    }\r\n}\r\n\r\nexport const getTransactions = (page = 1, filters = null) => {\r\n    return (dispatch) => {\r\n        return Axios.get(apiLinks.transactions, {\r\n            params: {\r\n                page,\r\n                filters\r\n            },\r\n            headers: UserAuth.getHeaders().headers\r\n        }).then(\r\n            response => {\r\n                let data = response.data\r\n\r\n                if (data.status === 'success') {\r\n                    return dispatch({\r\n                        type: SET_TRANSACTIONS,\r\n                        transactions: data.transactions,\r\n                    })\r\n\r\n                }\r\n                else {\r\n                    return dispatch({\r\n                        type: TRANSACTIONS_DEFAULT\r\n                    })\r\n                }\r\n            }\r\n        ).catch(\r\n            error => {\r\n                let message = (error.response && error.response.data && error.response.data.message) || error.message\r\n\r\n                showNotification(message, 'danger');\r\n\r\n                return dispatch({\r\n                    type: TRANSACTIONS_DEFAULT\r\n                })\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nexport const getTransaction = (transaction = false, transaction_ref = false) => {\r\n    return (dispatch) => {\r\n        if (transaction) {\r\n            return dispatch({\r\n                type: SET_TRANSACTION,\r\n                transaction\r\n            })\r\n        }\r\n        else {\r\n            return Axios.get(`${apiLinks.transaction}/${transaction_ref}`, UserAuth.getHeaders()).then(\r\n                response => {\r\n                    let data = response.data\r\n\r\n                    if (data.status === 'success') {\r\n                        return dispatch({\r\n                            type: SET_TRANSACTION,\r\n                            transaction: data.transaction,\r\n                        })\r\n\r\n                    }\r\n                    else {\r\n                        return dispatch({\r\n                            type: TRANSACTION_DEFAULT\r\n                        })\r\n                    }\r\n                }\r\n            ).catch(\r\n                error => {\r\n                    let message = (error.response && error.response.data && error.response.data.message) || error.message\r\n\r\n                    showNotification(message, 'danger');\r\n\r\n                    return dispatch({\r\n                        type: TRANSACTION_DEFAULT\r\n                    })\r\n                }\r\n            )\r\n        }\r\n    }\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Row, Col, Card } from 'react-bootstrap'\r\nimport { FormatNumber } from '../../../assets/Parsers'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { routeLinks } from '../../../../routes/NavLinks'\r\n\r\nfunction CardOverview({ accounts, transactions, balance }) {\r\n\r\n    var cards = [\r\n        {\r\n            title: 'Account(s)',\r\n            number: accounts,\r\n            color: 'primary',\r\n            to: routeLinks.accounts,\r\n            icon: 'piggy-bank'\r\n        },\r\n        {\r\n            title: 'Transaction(s)',\r\n            number: transactions,\r\n            color: 'warning',\r\n            to: routeLinks.transactions,\r\n            icon: 'box-open'\r\n        },\r\n        {\r\n            title: 'Balance',\r\n            number: balance,\r\n            color: 'success',\r\n            to: routeLinks.accounts,\r\n            withNaira: true,\r\n            icon: 'wallet'\r\n        }\r\n    ]\r\n\r\n    return (\r\n        <Row>\r\n            {\r\n                cards.map((item, index) => (\r\n                    <Col lg={4} md={6} key={index} className=\"mb-3\">\r\n                        <NavLink exact to={item.to} className=\"text-decoration-none\">\r\n                            <Card body className={`shadow-sm border-${item.color}`}>\r\n                                <Row>\r\n                                    <Col xs={7}>\r\n                                        <p className=\"text-muted\">{item.title}</p>\r\n                                        <p className=\"font-weight-bold text-black\">\r\n                                            <FormatNumber number={item.number} withNaira={item.withNaira} />\r\n                                        </p>\r\n                                    </Col>\r\n                                    <Col xs={3}>\r\n                                        <span className=\"fa-stack fa-2x\">\r\n                                            <i className={`fas fa-circle fa-stack-2x text-${item.color}`}></i>\r\n                                            <i className={`fas fa-${item.icon} fa-stack-1x fa-inverse`}></i>\r\n                                        </span>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card>\r\n                        </NavLink>\r\n                    </Col>\r\n                ))\r\n            }\r\n        </Row>\r\n    )\r\n}\r\n\r\nCardOverview.propTypes = {\r\n    transactions: PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\r\n    accounts: PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\r\n    balance: PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\r\n}\r\n\r\nconst mapStateToProps = ({ users }) => {\r\n    return {\r\n        transactions: users.dashboard.transactions,\r\n        accounts: users.dashboard.accounts,\r\n        balance: users.dashboard.balance\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CardOverview)","import $ from 'jquery';\r\nimport React from 'react';\r\nrequire('datatables.net-bs4');\r\nrequire('datatables.net-buttons-bs4');\r\nrequire('datatables.net-buttons/js/buttons.flash.js');\r\nrequire('datatables.net-buttons/js/buttons.html5.js');\r\nrequire('datatables.net-buttons/js/buttons.print.js');\r\n\r\nexport default function TableLayout({ columns, children, loading = false, onlyTable = false }) {\r\n    return (\r\n        <div className=\"table-responsive\">\r\n            <table className={`table table-bordered nowrap ${loading && 'hidden'}`} ref={(ref) => setTableRef(ref, loading, onlyTable)}>\r\n                <thead>\r\n                    <tr>\r\n                        {\r\n                            columns.map((column, index) => (\r\n                                <th key={index}>{column}</th>\r\n                            ))\r\n                        }\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {children}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst setTableRef = (ref, loading, onlyTable) => {\r\n    if (loading) {\r\n        $(ref).dataTable().fnDestroy()\r\n    }\r\n    if (!$.fn.DataTable.isDataTable(ref) && !loading) {\r\n        $(ref).dataTable({\r\n            dom: onlyTable ? 't' : 'lfBrtipHF',\r\n            buttons: [\r\n                'excel', 'pdf', 'print'\r\n            ],\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { routeLinks } from '../../routes/NavLinks';\r\nimport { FormatDate, FormatNumber } from '../assets/Parsers';\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function TransactionTableComponent({ transaction, fields, actions, serial, handleView }) {\r\n\r\n    const data = fields.map((value, index) => {\r\n        return (\r\n            <td key={index} className={value === 'actions' ? 'text-center' : ''}>\r\n\r\n                {value === 's_n' && serial}\r\n\r\n                {value === 'transaction_ref' && transaction.transaction_ref}\r\n\r\n                {value === 'account_number' && transaction.account.account_number}\r\n\r\n                {value === 'type' && transaction.type}\r\n\r\n                {value === 'narration' && transaction.narration}\r\n\r\n                {value === 'previous_balance' && <FormatNumber number={transaction.previous_balance} withNaira />}\r\n\r\n                {value === 'amount' && <FormatNumber number={transaction.amount} withNaira />}\r\n\r\n                {value === 'current_balance' && <FormatNumber number={transaction.current_balance} withNaira />}\r\n\r\n                {value === 'created_at' && <FormatDate date={transaction.created_at} withTime />}\r\n\r\n                {value === 'updated_at' && <FormatDate date={transaction.updated_at} withTime />}\r\n\r\n                {\r\n                    value === 'actions' &&\r\n                    actions.map((value, index) => {\r\n                        return (\r\n                            <span key={index}>\r\n                                {\r\n                                    value === 'view' &&\r\n                                    <NavLink key={index} exact to={`${routeLinks.transaction}/${transaction.transaction_ref}`} onClick={() => handleView(transaction)}><i className=\"fas fa-eye text-info mr-2\" title=\"View Transaction\"></i></NavLink>\r\n                                }\r\n                            </span>\r\n                        )\r\n                    })\r\n                }\r\n            </td>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <tr>\r\n            {data}\r\n        </tr>\r\n    )\r\n}\r\n\r\nTransactionTableComponent.propTypes = {\r\n    transaction: PropTypes.object,\r\n    fields: PropTypes.arrayOf(PropTypes.string),\r\n    serial: PropTypes.number,\r\n    actions: PropTypes.arrayOf(PropTypes.string)\r\n}","import PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport TableLayout from '../../../layouts/TableLayout'\r\nimport TransactionTableComponent from '../../../layouts/TransactionTableComponent'\r\nimport { Hr } from '../../../layouts/CustomLayouts'\r\n\r\nfunction RecentTransactions({ loaded, recent_transactions, handleView }) {\r\n\r\n    const columns = ['S/N', 'Actions', 'Transaction Ref', 'Type', 'Amount', 'Account Number', 'Narration', 'Created On']\r\n\r\n    const fields = ['s_n', 'actions', 'transaction_ref', 'type', 'amount', 'account_number', 'narration', 'created_at']\r\n\r\n    const actions = ['view']\r\n\r\n    return (\r\n        <Card className=\"shadow-sm my-5\">\r\n            <Card.Body>\r\n                <Card.Title className=\"font-weight-bold\">Recent Transactions</Card.Title>\r\n                <Hr align=\"left\" />\r\n                <TableLayout loading={!loaded} columns={columns}>\r\n                    {\r\n                        recent_transactions && recent_transactions.map((transaction, index) => (\r\n                            <TransactionTableComponent\r\n                                handleView={handleView}\r\n                                actions={actions}\r\n                                transaction={transaction}\r\n                                fields={fields}\r\n                                serial={index + 1}\r\n                                key={index}\r\n                            />\r\n                        ))\r\n                    }\r\n                </TableLayout>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nRecentTransactions.propTypes = {\r\n    recent_transactions: PropTypes.oneOfType([PropTypes.array, PropTypes.bool]),\r\n    loaded: PropTypes.bool,\r\n    handleView: PropTypes.func\r\n}\r\n\r\nconst mapStateToProps = ({ users }) => {\r\n    return {\r\n        loaded: users.dashboard.loaded,\r\n        recent_transactions: users.dashboard.recent_transactions\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(RecentTransactions)\r\n","import PropTypes from 'prop-types'\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getDashboard } from '../../../store/actions/dashboardActions'\r\nimport { getTransaction } from '../../../store/actions/transactionActions'\r\nimport MainLayout from '../../layouts/MainLayout'\r\nimport CardOverview from './components/CardOverview'\r\nimport RecentTransactions from './components/RecentTransactions'\r\n\r\nexport class Dashboard extends Component {\r\n\r\n    componentDidMount = () => {\r\n        this.props.getDashboard()\r\n    }\r\n\r\n    handleView = (transaction) => {\r\n        this.props.getTransaction(transaction)\r\n    }\r\n\r\n    render() {\r\n        const { loaded } = this.props\r\n\r\n        return (\r\n            <MainLayout show={loaded} pageTitle=\"Dashboard\">\r\n                <div className=\"main\">\r\n                    <CardOverview />\r\n                    <RecentTransactions\r\n                        handleView={this.handleView}\r\n                    />\r\n                </div>\r\n            </MainLayout>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getDashboard: () => dispatch(getDashboard()),\r\n        getTransaction: (transaction) => dispatch(getTransaction(transaction))\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ users }) => {\r\n    return {\r\n        loaded: users.dashboard.loaded,\r\n    }\r\n}\r\n\r\nDashboard.propTypes = {\r\n    loaded: PropTypes.bool\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard)","import Axios from \"axios\";\r\nimport { showNotification } from \"../../components/includes/Notifications\";\r\nimport { apiLinks } from \"../../routes/ApiLinks\";\r\nimport { UserAuth } from \"../../services/AuthService\";\r\nimport { SET_USER } from \"../reducers/types\";\r\n\r\nexport const userProfile = () => {\r\n    return (dispatch) => {\r\n\r\n        let user = UserAuth.getUser()\r\n\r\n        if (user) {\r\n            return Axios.get(apiLinks.fetchProfile, UserAuth.getHeaders()).then(\r\n                response => {\r\n                    let data = response.data\r\n\r\n                    if (data.status === 'success') {\r\n\r\n                        UserAuth.isAuthenticated = true\r\n                        return dispatch({\r\n                            type: SET_USER,\r\n                            user: data.user\r\n                        })\r\n\r\n                    }\r\n                    else {\r\n                        return UserAuth.signOut().then(() => {\r\n                            return dispatch({\r\n                                type: SET_USER,\r\n                                user: false\r\n                            })\r\n                        })\r\n                    }\r\n                }\r\n            ).catch(\r\n                error => {\r\n                    let message = (error.response && error.response.data && error.response.data.message) || error.message\r\n\r\n                    showNotification(message, 'danger');\r\n\r\n                    return dispatch({\r\n                        type: SET_USER,\r\n                        user: false\r\n                    })\r\n                }\r\n            )\r\n        }\r\n        else {\r\n            return dispatch({\r\n                type: SET_USER,\r\n                user: false\r\n            })\r\n        }\r\n    }\r\n}","import $ from 'jquery'\r\nimport PropTypes from 'prop-types'\r\nimport React, { Component } from 'react'\r\nimport { Form } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { apiLinks } from '../../../routes/ApiLinks'\r\nimport { formAction } from '../../../store/actions/formActions'\r\nimport { userProfile } from '../../../store/actions/profileActions'\r\nimport { CustomButton } from '../../layouts/CustomInputs'\r\nimport { Email, FormLayout, Name } from '../../layouts/Forms'\r\nimport MainLayout from '../../layouts/MainLayout'\r\nrequire('parsleyjs')\r\n\r\nexport class EditProfile extends Component {\r\n\r\n    formRef = React.createRef()\r\n\r\n    initialState = {\r\n        name: this.props.user.name,\r\n        email: this.props.user.email,\r\n        formSending: false\r\n    }\r\n\r\n    state = this.initialState\r\n\r\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\r\n        if (nextProps.formError || nextProps.formSuccess) {\r\n            this.setState({\r\n                formSending: false\r\n            }, () => {\r\n                if (this.formRef.current) {\r\n                    $(this.formRef.current).parsley().reset();\r\n                };\r\n                this.props.userProfile()\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        var form = $(this.formRef.current).parsley()\r\n\r\n        if (e.isTest || form.isValid()) {\r\n            e.preventDefault()\r\n            this.setState({\r\n                formSending: true\r\n            }, () => {\r\n                this.props.update(this.state)\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <MainLayout pageTitle=\"Edit Profile\">\r\n                <FormLayout>\r\n                    <Form ref={this.formRef} className=\"form-section\" onSubmit={this.handleSubmit}>\r\n                        <Name name={this.state.name} onChange={this.handleChange} />\r\n                        <Email email={this.state.email} onChange={this.handleChange} />\r\n                        <CustomButton type=\"submit\" variant=\"success\" icon=\"upload\" title=\"Update\" loading={this.state.formSending} onClick={this.handleSubmit} />\r\n                    </Form>\r\n                </FormLayout>\r\n            </MainLayout>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        update: (data) => dispatch(formAction('put', apiLinks.updateProfile, data)),\r\n        userProfile: () => dispatch(userProfile())\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ app, users }) => {\r\n    return {\r\n        formError: app.form.formError,\r\n        formSuccess: app.form.formSuccess,\r\n        user: users.auth.user\r\n    }\r\n}\r\n\r\nEditProfile.propTypes = {\r\n    user: PropTypes.object,\r\n    formError: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n    formSuccess: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n    update: PropTypes.func,\r\n    userProfile: PropTypes.func\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditProfile)","import $ from 'jquery'\r\nimport PropTypes from 'prop-types'\r\nimport React, { Component } from 'react'\r\nimport { Form } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { apiLinks } from '../../../routes/ApiLinks'\r\nimport { formAction } from '../../../store/actions/formActions'\r\nimport { CustomButton } from '../../layouts/CustomInputs'\r\nimport { ConfirmPassword, FormLayout, Password } from '../../layouts/Forms'\r\nimport MainLayout from '../../layouts/MainLayout'\r\nrequire('parsleyjs')\r\n\r\nexport class ChangePassword extends Component {\r\n\r\n    formRef = React.createRef()\r\n\r\n    initialState = {\r\n        currentPassword: '',\r\n        password: '',\r\n        password_confirmation: '',\r\n        formSending: false\r\n    }\r\n\r\n    state = this.initialState\r\n\r\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\r\n        if (nextProps.formError || nextProps.formSuccess) {\r\n            this.setState({\r\n                formSending: false\r\n            }, () => {\r\n                if (this.formRef.current) {\r\n                    $(this.formRef.current).parsley().reset();\r\n                };\r\n                if (nextProps.formSuccess) {\r\n                    this.setState(this.initialState)\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        var form = $(this.formRef.current).parsley()\r\n\r\n        if (e.isTest || form.isValid()) {\r\n            e.preventDefault()\r\n            this.setState({\r\n                formSending: true\r\n            }, () => {\r\n                this.props.changePassword(this.state)\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <MainLayout pageTitle=\"Change Password\">\r\n                <FormLayout>\r\n                    <Form ref={this.formRef} className=\"form-section\" onSubmit={this.handleSubmit}>\r\n                        <Password password={this.state.currentPassword} onChange={this.handleChange} id={false} label=\"Current Password\" name=\"currentPassword\" placeholder=\"Enter your current password\" />\r\n\r\n                        <Password password={this.state.password} onChange={this.handleChange} placeholder=\"Enter your new password\" />\r\n\r\n                        <ConfirmPassword password_confirmation={this.state.password_confirmation} onChange={this.handleChange} placeholder=\"Re-enter your new password\" />\r\n\r\n                        <CustomButton type=\"submit\" icon='check' loading={this.state.formSending} title='Change' variant='success' onClick={this.handleSubmit} />\r\n                    </Form>\r\n                </FormLayout>\r\n            </MainLayout>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changePassword: (data) => dispatch(formAction('put', apiLinks.changePassword, data))\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ app }) => {\r\n    return {\r\n        formError: app.form.formError,\r\n        formSuccess: app.form.formSuccess\r\n    }\r\n}\r\n\r\nChangePassword.propTypes = {\r\n    formError: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n    formSuccess: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n    changePassword: PropTypes.func\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangePassword)","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { routeLinks } from '../../routes/NavLinks';\r\nimport { FormatDate, FormatNumber } from '../assets/Parsers';\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function AccountsTableComponent({ account, fields, actions, serial, handleStatus }) {\r\n\r\n    const data = fields.map((value, index) => {\r\n        return (\r\n            <td key={index} className={value === 'actions' ? 'text-center' : ''}>\r\n\r\n                {value === 's_n' && serial}\r\n\r\n                {value === 'account_number' && account.account_number}\r\n\r\n                {value === 'account_type' && account.account_type}\r\n\r\n                {value === 'active' && (account.active ? 'Active' : 'Closed')}\r\n\r\n                {value === 'balance' && <FormatNumber number={account.balance} withNaira />}\r\n\r\n                {value === 'transactions_count' && <FormatNumber number={account.transactions_count} />}\r\n\r\n                {value === 'created_at' && <FormatDate date={account.created_at} withTime />}\r\n\r\n                {value === 'updated_at' && <FormatDate date={account.updated_at} withTime />}\r\n\r\n                {\r\n                    value === 'actions' &&\r\n                    actions.map((value, index) => {\r\n                        return (\r\n                            <span key={index}>\r\n                                {\r\n                                    value === 'view' &&\r\n                                    <NavLink key={index} exact to={`${routeLinks.account}/${account.account_number}`}><i className=\"fas fa-eye text-info mr-2\" title=\"View account\"></i></NavLink>\r\n                                }\r\n                                {\r\n                                    value === 'status' &&\r\n                                    <span key={index} onClick={() => handleStatus(account.account_number)}><i className={`fas fa-${account.active ? 'times' : 'check'} text-${account.active ? 'danger' : 'success'} mr-2`} title={`${account.active ? 'Close' : 'Open'} Account`}></i></span>\r\n                                }\r\n                            </span>\r\n                        )\r\n                    })\r\n                }\r\n            </td>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <tr>\r\n            {data}\r\n        </tr>\r\n    )\r\n}\r\n\r\nAccountsTableComponent.propTypes = {\r\n    account: PropTypes.object,\r\n    fields: PropTypes.arrayOf(PropTypes.string),\r\n    serial: PropTypes.number,\r\n    actions: PropTypes.arrayOf(PropTypes.string)\r\n}","import PropTypes from 'prop-types'\r\nimport React, { Component } from 'react'\r\nimport { Badge, Card } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { getAccounts } from '../../../store/actions/accountActions'\r\nimport { FormatNumber } from '../../assets/Parsers'\r\nimport AccountsTableComponent from '../../layouts/AccountsTableComponent'\r\nimport { Pagination, Hr } from '../../layouts/CustomLayouts'\r\nimport MainLayout from '../../layouts/MainLayout'\r\nimport TableLayout from '../../layouts/TableLayout'\r\nimport { formAction } from '../../../store/actions/formActions'\r\nimport { apiLinks } from '../../../routes/ApiLinks'\r\nimport { userProfile } from '../../../store/actions/profileActions'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { routeLinks } from '../../../routes/NavLinks'\r\n\r\nexport class Accounts extends Component {\r\n\r\n    state = {\r\n        page: 1,\r\n        loaded: false,\r\n        pageLoading: false,\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if (this.props.accounts) {\r\n            this.setState({\r\n                loaded: true\r\n            })\r\n        }\r\n        this.props.getAccounts()\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\r\n        if (nextProps.accounts !== this.props.accounts) {\r\n            this.setState({\r\n                loaded: true,\r\n                pageLoading: false,\r\n                page: nextProps.accounts.current_page\r\n            })\r\n        }\r\n        if (nextProps.formError || nextProps.formSuccess) {\r\n            this.setState({\r\n                pageLoading: false\r\n            }, () => {\r\n                if (nextProps.formSuccess) {\r\n                    this.props.getAccounts(this.state.page)\r\n                    this.props.userProfile()\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    handlePageClick = (data) => {\r\n        this.setState({\r\n            page: data.selected + 1,\r\n            pageLoading: true\r\n        }, () => {\r\n            this.props.getAccounts(this.state.page)\r\n        })\r\n    }\r\n\r\n    handleStatus = (account_number) => {\r\n        if (window.confirm('Are you sure you want to perform this action?')) {\r\n            this.setState({\r\n                pageLoading: true\r\n            }, () => {\r\n                this.props.accountStatus(account_number)\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { loaded, pageLoading } = this.state\r\n\r\n        const { accounts } = this.props\r\n\r\n        const columns = ['S/N', 'Actions', 'Account Number', 'Type', 'Balance', 'Active', 'Transactions', 'Created On']\r\n\r\n        const fields = ['s_n', 'actions', 'account_number', 'account_type', 'balance', 'active', 'transactions_count', 'created_at']\r\n\r\n        const actions = ['view', 'status']\r\n\r\n        return (\r\n            <MainLayout show={loaded} pageTitle=\"Accounts\">\r\n                <div className=\"my-3 text-right\">\r\n                    <NavLink exact to={`${routeLinks.accounts}/create`} className=\"btn btn-success\">\r\n                        <i className=\"fas fa-plus-square\"></i> Create An Account\r\n                    </NavLink>\r\n                </div>\r\n                <Card className=\"shadow-sm\">\r\n                    <Card.Body>\r\n                        <Card.Title className=\"font-weight-bold\">\r\n                            User Accounts <Badge variant=\"dark\"><FormatNumber number={accounts.total || 0} /></Badge>\r\n                        </Card.Title>\r\n                        <Hr align=\"left\" />\r\n                        <Pagination handlePageClick={this.handlePageClick} item={accounts} pageCount={accounts.last_page} position=\"left\" showPage pageLoading={pageLoading} />\r\n                        <TableLayout loading={pageLoading} columns={columns}>\r\n                            {\r\n                                accounts && accounts.data.map((account, index) => (\r\n                                    <AccountsTableComponent\r\n                                        handleStatus={this.handleStatus}\r\n                                        actions={actions}\r\n                                        account={account}\r\n                                        fields={fields}\r\n                                        serial={index + 1}\r\n                                        key={index}\r\n                                    />\r\n                                ))\r\n                            }\r\n                        </TableLayout>\r\n                    </Card.Body>\r\n                </Card>\r\n            </MainLayout>\r\n        )\r\n    }\r\n}\r\n\r\nAccounts.propTypes = {\r\n    accounts: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\r\n    formError: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n    formSuccess: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n    getAccounts: PropTypes.func,\r\n    accountStatus: PropTypes.func,\r\n    userProfile: PropTypes.func,\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getAccounts: (page) => dispatch(getAccounts(page)),\r\n        accountStatus: (account_number) => dispatch(formAction('put', `${apiLinks.account}/${account_number}`)),\r\n        userProfile: () => dispatch(userProfile())\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ users, app }) => {\r\n    return {\r\n        accounts: users.accounts.accounts,\r\n        formError: app.form.formError,\r\n        formSuccess: app.form.formSuccess,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Accounts)","import Axios from \"axios\";\r\nimport { showNotification } from \"../../components/includes/Notifications\";\r\nimport { apiLinks } from \"../../routes/ApiLinks\";\r\nimport { UserAuth } from \"../../services/AuthService\";\r\nimport { ACCOUNTS_DEFAULT, ACCOUNT_DEFAULT, SET_ACCOUNTS, SET_ACCOUNT } from \"../reducers/types\";\r\n\r\nexport const accountDefault = () => {\r\n    return {\r\n        type: ACCOUNT_DEFAULT\r\n    }\r\n}\r\n\r\nexport const accountsDefault = () => {\r\n    return {\r\n        type: ACCOUNTS_DEFAULT\r\n    }\r\n}\r\n\r\nexport const getAccounts = (page = 1) => {\r\n    return (dispatch) => {\r\n        return Axios.get(apiLinks.accounts, {\r\n            params: {\r\n                page\r\n            },\r\n            headers: UserAuth.getHeaders().headers\r\n        }).then(\r\n            response => {\r\n                let data = response.data\r\n\r\n                if (data.status === 'success') {\r\n                    return dispatch({\r\n                        type: SET_ACCOUNTS,\r\n                        accounts: data.accounts,\r\n                    })\r\n\r\n                }\r\n                else {\r\n                    return dispatch({\r\n                        type: ACCOUNTS_DEFAULT\r\n                    })\r\n                }\r\n            }\r\n        ).catch(\r\n            error => {\r\n                let message = (error.response && error.response.data && error.response.data.message) || error.message\r\n\r\n                showNotification(message, 'danger');\r\n\r\n                return dispatch({\r\n                    type: ACCOUNTS_DEFAULT\r\n                })\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nexport const getAccount = (account_number, transactions_page = 1) => {\r\n    return (dispatch) => {\r\n        return Axios.get(`${apiLinks.account}/${account_number}`, {\r\n            params: {\r\n                transactions: transactions_page\r\n            },\r\n            headers: UserAuth.getHeaders().headers\r\n        }).then(\r\n            response => {\r\n                let data = response.data\r\n\r\n                if (data.status === 'success') {\r\n                    return dispatch({\r\n                        type: SET_ACCOUNT,\r\n                        account: data.account,\r\n                    })\r\n\r\n                }\r\n                else {\r\n                    return dispatch({\r\n                        type: ACCOUNT_DEFAULT\r\n                    })\r\n                }\r\n            }\r\n        ).catch(\r\n            error => {\r\n                let message = (error.response && error.response.data && error.response.data.message) || error.message\r\n\r\n                showNotification(message, 'danger');\r\n\r\n                return dispatch({\r\n                    type: ACCOUNT_DEFAULT\r\n                })\r\n            }\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { Card, Col, Row } from 'react-bootstrap'\r\nimport { FormatDate, FormatNumber } from '../../../assets/Parsers'\r\nimport { Label, CustomButton } from '../../../layouts/CustomInputs'\r\n\r\nexport default function AccountLayout({ account, handleStatus, formSending }) {\r\n\r\n    const accountLayout = [\r\n        {\r\n            label: 'Account Type',\r\n            value: account.account_type\r\n        },\r\n        {\r\n            label: 'Account Status',\r\n            value: account.active ? 'Active' : 'Closed'\r\n        },\r\n        {\r\n            label: 'Current Balance',\r\n            value: <FormatNumber number={account.balance} withNaira />\r\n        },\r\n        {\r\n            label: 'Created On',\r\n            value: <FormatDate date={account.created_at} withTime />\r\n        }\r\n    ]\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <Row>\r\n                    {\r\n                        accountLayout.map((item, index) => (\r\n                            <Col md={6} key={index} className=\"py-3\">\r\n                                <Label className=\"form-control-label font-weight-bold\" required={false} label={item.label} name={item.label} />\r\n                                <p>{item.value}</p>\r\n                            </Col>\r\n                        ))\r\n                    }\r\n                </Row>\r\n                <CustomButton type=\"button\" icon={`${account.active ? 'times' : 'check'}`} loading={formSending} title={`${account.active ? 'Close' : 'Open'} Account`} variant={`${account.active ? 'danger' : 'success'}`} onClick={handleStatus} />\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Badge, Card } from 'react-bootstrap'\r\nimport TableLayout from '../../../layouts/TableLayout'\r\nimport TransactionTableComponent from '../../../layouts/TransactionTableComponent'\r\nimport { FormatNumber } from '../../../assets/Parsers'\r\nimport { Pagination, Hr } from '../../../layouts/CustomLayouts'\r\n\r\nexport default function TransactionsTable({ transactions, pageLoading, handlePageClick, handleView, }) {\r\n\r\n    const columns = ['S/N', 'Actions', 'Transaction Ref', 'Type', 'Previous Balance', 'Amount', 'Current Balance', 'Narration', 'Created On']\r\n\r\n    const fields = ['s_n', 'actions', 'transaction_ref', 'type', 'previous_balance', 'amount', 'current_balance', 'narration', 'created_at']\r\n\r\n    const actions = ['view']\r\n\r\n    return (\r\n        <Card className=\"shadow-sm my-5\">\r\n            <Card.Body>\r\n                <Card.Title className=\"font-weight-bold\">\r\n                    Transactions <Badge variant=\"dark\"><FormatNumber number={transactions.total || 0} /></Badge>\r\n                </Card.Title>\r\n                <Hr align=\"left\" />\r\n                <Pagination handlePageClick={handlePageClick} item={transactions} pageCount={transactions.last_page} position=\"left\" showPage pageLoading={pageLoading} />\r\n                <TableLayout loading={pageLoading} columns={columns}>\r\n                    {\r\n                        transactions && transactions.data.map((transaction, index) => (\r\n                            <TransactionTableComponent\r\n                                handleView={handleView}\r\n                                actions={actions}\r\n                                transaction={transaction}\r\n                                fields={fields}\r\n                                serial={index + 1}\r\n                                key={index}\r\n                            />\r\n                        ))\r\n                    }\r\n                </TableLayout>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n","import PropTypes from 'prop-types'\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { apiLinks } from '../../../routes/ApiLinks'\r\nimport { getAccount } from '../../../store/actions/accountActions'\r\nimport { formAction } from '../../../store/actions/formActions'\r\nimport MainLayout from '../../layouts/MainLayout'\r\nimport AccountLayout from './components/AccountLayout'\r\nimport TransactionsTable from './components/TransactionsTable'\r\nimport { getTransaction } from '../../../store/actions/transactionActions'\r\nimport { userProfile } from '../../../store/actions/profileActions'\r\n\r\nexport class Account extends Component {\r\n\r\n    account_number = this.props.match.params.account_number\r\n\r\n    state = {\r\n        loaded: false,\r\n        formSending: false,\r\n        pageLoading: false,\r\n        page: 1\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if (this.props.account.account_number === this.account_number) {\r\n            this.setState({\r\n                loaded: true\r\n            })\r\n        }\r\n        this.props.getAccount(this.account_number)\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\r\n        if (nextProps.account !== this.props.account) {\r\n            this.setState({\r\n                loaded: true,\r\n                pageLoading: false,\r\n                page: nextProps.account.transactions.current_page\r\n            })\r\n        }\r\n        if (nextProps.formError || nextProps.formSuccess) {\r\n            this.setState({\r\n                formSending: false\r\n            }, () => {\r\n                if (nextProps.formSuccess) {\r\n                    this.props.getAccount(this.account_number)\r\n                    this.props.userProfile()\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    handleStatus = () => {\r\n        if (window.confirm('Are you sure you want to perform this action?')) {\r\n            this.setState({\r\n                formSending: true\r\n            }, () => {\r\n                this.props.accountStatus(this.account_number)\r\n            })\r\n        }\r\n    }\r\n\r\n    handleView = (transaction) => {\r\n        this.props.getTransaction(transaction)\r\n    }\r\n\r\n    handlePageClick = (data) => {\r\n        this.setState({\r\n            page: data.selected + 1,\r\n            pageLoading: true\r\n        }, () => {\r\n            this.props.getAccount(this.account_number, this.state.page)\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const { formSending, pageLoading, loaded } = this.state\r\n\r\n        const { account } = this.props\r\n\r\n        return (\r\n            <MainLayout show={loaded} pageTitle={`Account: ${account.account_number}`}>\r\n                <AccountLayout\r\n                    account={account}\r\n                    formSending={formSending}\r\n                    handleStatus={this.handleStatus}\r\n                />\r\n                <TransactionsTable\r\n                    handlePageClick={this.handlePageClick}\r\n                    handleView={this.handleView}\r\n                    pageLoading={pageLoading}\r\n                    transactions={account.transactions}\r\n                />\r\n            </MainLayout>\r\n        )\r\n    }\r\n}\r\n\r\nAccount.propTypes = {\r\n    account: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\r\n    formError: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n    formSuccess: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n    getAccount: PropTypes.func,\r\n    getTransaction: PropTypes.func,\r\n    accountStatus: PropTypes.func,\r\n    userProfile: PropTypes.func,\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getAccount: (account_number, transactions_page) => dispatch(getAccount(account_number, transactions_page)),\r\n        accountStatus: (account_number) => dispatch(formAction('put', `${apiLinks.account}/${account_number}`)),\r\n        getTransaction: (transaction) => dispatch(getTransaction(transaction)),\r\n        userProfile: () => dispatch(userProfile())\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ users, app }) => {\r\n    return {\r\n        account: users.accounts.account,\r\n        formError: app.form.formError,\r\n        formSuccess: app.form.formSuccess,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Account)","import React, { Fragment } from 'react';\r\nimport { Col, Form } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { UserAccountsSelect } from '../assets/Parsers';\r\nimport { CustomButton, CustomSelect } from './CustomInputs';\r\n\r\nexport function Filters({ filterOptions, handleFilterChange, state, handleFilter, resetFilters, user }) {\r\n    return (\r\n        <Fragment>\r\n            <Form.Row>\r\n                {\r\n                    filterOptions.map((option, index) => (\r\n                        <Fragment key={index}>\r\n                            {\r\n                                option === 'account_number' &&\r\n                                <Form.Group as={Col} md={4} className=\"mb-3\">\r\n                                    <CustomSelect name=\"account_number\" onChange={handleFilterChange} placeholder=\"Account...\" required={false} options={UserAccountsSelect(user.accounts)} value={state.filters.account_number} />\r\n                                </Form.Group>\r\n                            }\r\n                            {\r\n                                option === 'type' &&\r\n                                <Form.Group as={Col} md={4} className=\"mb-3\">\r\n                                    <CustomSelect name=\"type\" onChange={handleFilterChange} placeholder=\"Type...\" required={false} options={[\r\n                                        { value: 'credit', label: 'Credit' },\r\n                                        { value: 'debit', label: 'Debit' }\r\n                                    ]} value={state.filters.type} />\r\n                                </Form.Group>\r\n                            }\r\n                        </Fragment>\r\n                    ))\r\n                }\r\n            </Form.Row>\r\n            <Form.Row>\r\n                <CustomButton loading={state.filterLoading} disabled={state.filterLoading} className=\"mb-3 mr-3\" type=\"button\" icon='search' title=\"Search\" variant=\"success\" onClick={handleFilter} />\r\n                <CustomButton loading={state.filterLoading} disabled={state.filterLoading} className=\"mb-3 mr-3\" type=\"button\" icon='sync' title=\"Reset\" variant=\"info\" onClick={resetFilters} />\r\n            </Form.Row>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ users }) => {\r\n    return {\r\n        user: users.auth.user,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Filters)","import PropTypes from 'prop-types'\r\nimport React, { Component } from 'react'\r\nimport { Badge, Card, Col } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { getTransaction, getTransactions } from '../../../store/actions/transactionActions'\r\nimport { FormatNumber } from '../../assets/Parsers'\r\nimport { Pagination, Hr } from '../../layouts/CustomLayouts'\r\nimport Filters from '../../layouts/Filters'\r\nimport MainLayout from '../../layouts/MainLayout'\r\nimport TableLayout from '../../layouts/TableLayout'\r\nimport TransactionTableComponent from '../../layouts/TransactionTableComponent'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { routeLinks } from '../../../routes/NavLinks'\r\n\r\nexport class Transactions extends Component {\r\n\r\n    initialState = {\r\n        page: 1,\r\n        loaded: false,\r\n        pageLoading: false,\r\n        filterLoading: false,\r\n        filters: {\r\n            type: '',\r\n            account_number: ''\r\n        }\r\n    }\r\n\r\n    state = this.initialState\r\n\r\n    componentDidMount = () => {\r\n        this.props.getTransactions(this.state.page, this.state.filters)\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\r\n        if (nextProps.transactions !== this.props.transactions) {\r\n            this.setState({\r\n                loaded: true,\r\n                pageLoading: false,\r\n                filterLoading: false,\r\n                page: nextProps.transactions.current_page\r\n            })\r\n        }\r\n    }\r\n\r\n    resetFilters = () => {\r\n        this.setState({\r\n            filterLoading: true,\r\n            pageLoading: true,\r\n            filters: {\r\n                type: '',\r\n                account_number: ''\r\n            }\r\n        }, () => {\r\n            this.props.getTransactions(this.state.page, this.state.filters)\r\n        })\r\n    }\r\n\r\n    handleFilterChange = (e) => {\r\n        var filters = this.state.filters\r\n        filters[e.target.name] = e.target.value\r\n\r\n        this.setState({\r\n            filters,\r\n        })\r\n    }\r\n\r\n    handleFilter = () => {\r\n        this.setState({\r\n            page: 1,\r\n            filterLoading: true,\r\n            pageLoading: true\r\n        }, () => {\r\n            this.props.getTransactions(this.state.page, this.state.filters)\r\n        })\r\n    }\r\n\r\n\r\n    handlePageClick = (data) => {\r\n        this.setState({\r\n            page: data.selected + 1,\r\n            pageLoading: true\r\n        }, () => {\r\n            this.props.getTransactions(this.state.page, this.state.filters)\r\n        })\r\n    }\r\n\r\n    handleView = (transaction) => {\r\n        this.props.getTransaction(transaction)\r\n    }\r\n\r\n    render() {\r\n\r\n        const { loaded, pageLoading } = this.state\r\n\r\n        const { transactions } = this.props\r\n\r\n        const columns = ['S/N', 'Actions', 'Transaction Ref', 'Type', 'Account Number', 'Previous Balance', 'Amount', 'Current Balance', 'Narration', 'Created On']\r\n\r\n        const fields = ['s_n', 'actions', 'transaction_ref', 'type', 'account_number', 'previous_balance', 'amount', 'current_balance', 'narration', 'created_at']\r\n\r\n        const actions = ['view']\r\n\r\n        return (\r\n            <MainLayout show={loaded} pageTitle=\"Transactions\">\r\n                <Col lg={12} className=\"mb-3\">\r\n                    <h6>Filters: </h6>\r\n                    <Filters\r\n                        filterOptions={['account_number', 'type']}\r\n                        handleFilter={this.handleFilter}\r\n                        handleFilterChange={this.handleFilterChange}\r\n                        resetFilters={this.resetFilters}\r\n                        state={this.state}\r\n                    />\r\n                </Col>\r\n                <div className=\"my-3 text-right\">\r\n                    <NavLink exact to={routeLinks.transfer} className=\"btn btn-success\">\r\n                        <i className=\"fas fa-plus-square\"></i> Transfer Money\r\n                        </NavLink>\r\n                </div>\r\n                <Card className=\"shadow-sm\">\r\n                    <Card.Body>\r\n                        <Card.Title className=\"font-weight-bold\">\r\n                            Transactions <Badge variant=\"dark\"><FormatNumber number={transactions.total || 0} /></Badge>\r\n                        </Card.Title>\r\n                        <Hr align=\"left\" />\r\n                        <Pagination handlePageClick={this.handlePageClick} item={transactions} pageCount={transactions.last_page} position=\"left\" showPage pageLoading={pageLoading} />\r\n                        <TableLayout loading={pageLoading} columns={columns}>\r\n                            {\r\n                                transactions && transactions.data.map((transaction, index) => (\r\n                                    <TransactionTableComponent\r\n                                        handleView={this.handleView}\r\n                                        actions={actions}\r\n                                        transaction={transaction}\r\n                                        fields={fields}\r\n                                        serial={index + 1}\r\n                                        key={index}\r\n                                    />\r\n                                ))\r\n                            }\r\n                        </TableLayout>\r\n                    </Card.Body>\r\n                </Card>\r\n            </MainLayout>\r\n        )\r\n    }\r\n}\r\n\r\nTransactions.propTypes = {\r\n    transactions: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\r\n    getTransactions: PropTypes.func,\r\n    setTransaction: PropTypes.func\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getTransactions: (page, filters) => dispatch(getTransactions(page, filters)),\r\n        getTransaction: (transaction) => dispatch(getTransaction(transaction))\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ users, app }) => {\r\n    return {\r\n        transactions: users.transactions.transactions\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Transactions)","import React from 'react'\r\nimport { Card, Col, Row } from 'react-bootstrap'\r\nimport { FormatDate, FormatNumber } from '../../../assets/Parsers'\r\nimport { Label } from '../../../layouts/CustomInputs'\r\n\r\nexport default function TransactionLayout({ transaction }) {\r\n\r\n    const accountLayout = [\r\n        {\r\n            label: 'Account Number',\r\n            value: transaction.account.account_number\r\n        },\r\n        {\r\n            label: 'Account Type',\r\n            value: transaction.account.account_type\r\n        },\r\n        {\r\n            label: 'Transaction Type',\r\n            value: transaction.type\r\n        },\r\n        {\r\n            label: 'Narration',\r\n            value: transaction.narration\r\n        },\r\n        {\r\n            label: 'Previous Balance',\r\n            value: <FormatNumber number={transaction.previous_balance} withNaira />\r\n        },\r\n        {\r\n            label: 'Amount',\r\n            value: <FormatNumber number={transaction.amount} withNaira />\r\n        },\r\n        {\r\n            label: 'Current Balance',\r\n            value: <FormatNumber number={transaction.current_balance} withNaira />\r\n        },\r\n        {\r\n            label: 'Created On',\r\n            value: <FormatDate date={transaction.created_at} withTime />\r\n        }\r\n    ]\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <Row>\r\n                    {\r\n                        accountLayout.map((item, index) => (\r\n                            <Col md={6} key={index} className=\"py-3\">\r\n                                <Label className=\"form-control-label font-weight-bold\" required={false} label={item.label} name={item.label} />\r\n                                <p>{item.value}</p>\r\n                            </Col>\r\n                        ))\r\n                    }\r\n                </Row>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { getTransaction } from '../../../store/actions/transactionActions'\r\nimport MainLayout from '../../layouts/MainLayout'\r\nimport TransactionLayout from './components/TransactionLayout'\r\n\r\nexport class Transaction extends Component {\r\n\r\n    transaction_ref = this.props.match.params.transaction_ref\r\n\r\n    state = {\r\n        loaded: false,\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if (this.props.transaction) {\r\n            this.setState({\r\n                loaded: true\r\n            })\r\n        }\r\n        else {\r\n            this.props.getTransaction(this.transaction_ref)\r\n        }\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\r\n        if (nextProps.transaction !== this.props.transaction) {\r\n            this.setState({\r\n                loaded: true,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { loaded } = this.state\r\n\r\n        const { transaction } = this.props\r\n\r\n        return (\r\n            <MainLayout show={loaded} pageTitle={`Transaction: ${transaction.transaction_ref}`}>\r\n                <TransactionLayout\r\n                    transaction={transaction}\r\n                />\r\n            </MainLayout>\r\n        )\r\n    }\r\n}\r\n\r\nTransaction.propTypes = {\r\n    transaction: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\r\n    getTransaction: PropTypes.func,\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getTransaction: (transaction_ref) => dispatch(getTransaction(null, transaction_ref))\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ users }) => {\r\n    return {\r\n        transaction: users.transactions.transaction,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Transaction)","import $ from 'jquery'\r\nimport PropTypes from 'prop-types'\r\nimport React, { Component, Fragment } from 'react'\r\nimport { Form } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { apiLinks } from '../../../routes/ApiLinks'\r\nimport { formAction } from '../../../store/actions/formActions'\r\nimport { userProfile } from '../../../store/actions/profileActions'\r\nimport { CustomButton } from '../../layouts/CustomInputs'\r\nimport { AccountName, AccountNumber, Amount, BankName, FormLayout, FromAccount, Password, ToAccount, Narration } from '../../layouts/Forms'\r\nimport MainLayout from '../../layouts/MainLayout'\r\nrequire('parsleyjs')\r\n\r\nexport class Transfer extends Component {\r\n\r\n    formRef = React.createRef()\r\n\r\n    initialState = {\r\n        from_account: '',\r\n        to_account: '',\r\n        amount: '',\r\n        bank_name: '',\r\n        account_name: '',\r\n        account_number: '',\r\n        password: '',\r\n        narration: '',\r\n        formSending: false\r\n    }\r\n\r\n    state = this.initialState\r\n\r\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\r\n        if (nextProps.formError || nextProps.formSuccess) {\r\n            this.setState({\r\n                formSending: false\r\n            }, () => {\r\n                if (nextProps.formSuccess) {\r\n                    this.setState(this.initialState)\r\n                    this.props.userProfile()\r\n                    if (this.formRef.current) {\r\n                        $(this.formRef.current).parsley().reset();\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        }, () => {\r\n            if (this.state.to_account !== 'others') {\r\n                this.setState({\r\n                    bank_name: '',\r\n                    account_name: '',\r\n                    account_number: '',\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        var form = $(this.formRef.current).parsley()\r\n\r\n        if (e.isTest || form.isValid()) {\r\n            e.preventDefault()\r\n            this.setState({\r\n                formSending: true\r\n            }, () => {\r\n                this.props.transfer(this.state)\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { user, banks } = this.props\r\n\r\n        return (\r\n            <MainLayout pageTitle=\"Transfer Money\">\r\n                <FormLayout>\r\n                    <Form ref={this.formRef} className=\"form-section\" onSubmit={this.handleSubmit}>\r\n                        <FromAccount accounts={user.accounts} from_account={this.state.from_account} onChange={this.handleChange} />\r\n                        <ToAccount accounts={user.accounts} to_account={this.state.to_account} onChange={this.handleChange} />\r\n                        <Amount amount={this.state.amount} onChange={this.handleChange} />\r\n                        <Password password={this.state.password} onChange={this.handleChange} />\r\n                        {\r\n                            this.state.to_account === 'others' &&\r\n                            <Fragment>\r\n                                <BankName bank_name={this.state.bank_name} onChange={this.handleChange} banks={banks} />\r\n                                <AccountName account_name={this.state.account_name} onChange={this.handleChange} />\r\n                                <AccountNumber account_number={this.state.account_number} onChange={this.handleChange} />\r\n                            </Fragment>\r\n                        }\r\n                        <Narration narration={this.state.narration} onChange={this.handleChange} />\r\n                        <CustomButton block type=\"submit\" icon='check' loading={this.state.formSending} title=\"Send\" variant=\"success\" onClick={this.handleSubmit} />\r\n                    </Form>\r\n                </FormLayout>\r\n            </MainLayout>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        transfer: (data) => dispatch(formAction('post', apiLinks.account, data)),\r\n        userProfile: () => dispatch(userProfile())\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ app, users }) => {\r\n    return {\r\n        formError: app.form.formError,\r\n        formSuccess: app.form.formSuccess,\r\n        banks: app.website.banks,\r\n        user: users.auth.user\r\n    }\r\n}\r\n\r\nTransfer.propTypes = {\r\n    user: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\r\n    formError: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n    formSuccess: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n    banks: PropTypes.oneOfType([PropTypes.bool, PropTypes.array]),\r\n    transfer: PropTypes.func,\r\n    userProfile: PropTypes.func,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Transfer)","import $ from 'jquery'\r\nimport PropTypes from 'prop-types'\r\nimport React, { Component } from 'react'\r\nimport { Form } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { apiLinks } from '../../../routes/ApiLinks'\r\nimport { formAction } from '../../../store/actions/formActions'\r\nimport { userProfile } from '../../../store/actions/profileActions'\r\nimport { CustomButton } from '../../layouts/CustomInputs'\r\nimport { Amount, FormLayout, FromAccount } from '../../layouts/Forms'\r\nimport MainLayout from '../../layouts/MainLayout'\r\nrequire('parsleyjs')\r\n\r\nexport class FundAccount extends Component {\r\n\r\n    formRef = React.createRef()\r\n\r\n    initialState = {\r\n        account: '',\r\n        amount: '',\r\n        formSending: false\r\n    }\r\n\r\n    state = this.initialState\r\n\r\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\r\n        if (nextProps.formError || nextProps.formSuccess) {\r\n            this.setState({\r\n                formSending: false\r\n            }, () => {\r\n                if (nextProps.formSuccess) {\r\n                    this.setState(this.initialState)\r\n                    this.props.userProfile()\r\n                    if (this.formRef.current) {\r\n                        $(this.formRef.current).parsley().reset();\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        var form = $(this.formRef.current).parsley()\r\n\r\n        if (e.isTest || form.isValid()) {\r\n            e.preventDefault()\r\n            this.setState({\r\n                formSending: true\r\n            }, () => {\r\n                this.props.fund(this.state.account, this.state)\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { user } = this.props\r\n\r\n        return (\r\n            <MainLayout pageTitle=\"Fund Account\">\r\n                <FormLayout>\r\n                    <Form ref={this.formRef} className=\"form-section\" onSubmit={this.handleSubmit}>\r\n                        <FromAccount name=\"account\" label=\"Account\" accounts={user.accounts} from_account={this.state.account} onChange={this.handleChange} />\r\n                        <Amount amount={this.state.amount} onChange={this.handleChange} />\r\n                        <CustomButton block type=\"submit\" icon='check' loading={this.state.formSending} title=\"Fund\" variant=\"success\" onClick={this.handleSubmit} />\r\n                    </Form>\r\n                </FormLayout>\r\n            </MainLayout>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fund: (account_number, data) => dispatch(formAction('post', `${apiLinks.account}/${account_number}`, data)),\r\n        userProfile: () => dispatch(userProfile())\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ app, users }) => {\r\n    return {\r\n        formError: app.form.formError,\r\n        formSuccess: app.form.formSuccess,\r\n        user: users.auth.user\r\n    }\r\n}\r\n\r\nFundAccount.propTypes = {\r\n    user: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\r\n    formError: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n    formSuccess: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n    fund: PropTypes.func,\r\n    userProfile: PropTypes.func,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FundAccount)","import $ from 'jquery'\r\nimport PropTypes from 'prop-types'\r\nimport React, { Component } from 'react'\r\nimport { Form } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { apiLinks } from '../../../routes/ApiLinks'\r\nimport { formAction } from '../../../store/actions/formActions'\r\nimport { userProfile } from '../../../store/actions/profileActions'\r\nimport { CustomButton } from '../../layouts/CustomInputs'\r\nimport { AccountType, Balance, FormLayout } from '../../layouts/Forms'\r\nimport MainLayout from '../../layouts/MainLayout'\r\nrequire('parsleyjs')\r\n\r\nexport class CreateAccount extends Component {\r\n\r\n    formRef = React.createRef()\r\n\r\n    initialState = {\r\n        account_type: '',\r\n        balance: '',\r\n        formSending: false\r\n    }\r\n\r\n    state = this.initialState\r\n\r\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\r\n        if (nextProps.formError || nextProps.formSuccess) {\r\n            this.setState({\r\n                formSending: false\r\n            }, () => {\r\n                if (nextProps.formSuccess) {\r\n                    this.setState(this.initialState)\r\n                    this.props.userProfile()\r\n                    if (this.formRef.current) {\r\n                        $(this.formRef.current).parsley().reset();\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        var form = $(this.formRef.current).parsley()\r\n\r\n        if (e.isTest || form.isValid()) {\r\n            e.preventDefault()\r\n            this.setState({\r\n                formSending: true\r\n            }, () => {\r\n                this.props.create(this.state)\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { account_types } = this.props\r\n\r\n        return (\r\n            <MainLayout pageTitle=\"Create Account\">\r\n                <FormLayout>\r\n                    <Form ref={this.formRef} className=\"form-section\" onSubmit={this.handleSubmit}>\r\n                        <AccountType account_type={this.state.account_type} account_types={account_types} onChange={this.handleChange} />\r\n                        <Balance balance={this.state.balance} onChange={this.handleChange} />\r\n                        <CustomButton block type=\"submit\" icon='check' loading={this.state.formSending} title=\"Create\" variant=\"success\" onClick={this.handleSubmit} />\r\n                    </Form>\r\n                </FormLayout>\r\n            </MainLayout>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        create: (data) => dispatch(formAction('post', `${apiLinks.accounts}/create`, data)),\r\n        userProfile: () => dispatch(userProfile())\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ app, users }) => {\r\n    return {\r\n        formError: app.form.formError,\r\n        formSuccess: app.form.formSuccess,\r\n        account_types: app.website.account_types\r\n    }\r\n}\r\n\r\n\r\nCreateAccount.propTypes = {\r\n    formError: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n    formSuccess: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n    account_types: PropTypes.oneOfType([PropTypes.bool, PropTypes.array]),\r\n    create: PropTypes.func,\r\n    userProfile: PropTypes.func,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateAccount)","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { routeLinks } from './NavLinks';\r\nimport Login from '../components/pages/Login';\r\nimport SignUp from '../components/pages/SignUp';\r\nimport Page404 from '../components/pages/Page404';\r\nimport UserPrivateRouter from '../services/UserPrivateRouter';\r\nimport Dashboard from '../components/pages/dashboard/Dashboard';\r\nimport EditProfile from '../components/pages/profile/EditProfile';\r\nimport ChangePassword from '../components/pages/profile/ChangePassword';\r\nimport Accounts from '../components/pages/accounts/Accounts';\r\nimport Account from '../components/pages/accounts/Account';\r\nimport Transactions from '../components/pages/transactions/Transactions';\r\nimport Transaction from '../components/pages/transactions/Transaction';\r\nimport Transfer from '../components/pages/transactions/Transfer';\r\nimport FundAccount from '../components/pages/accounts/FundAccount';\r\nimport CreateAccount from '../components/pages/accounts/CreateAccount';\r\n\r\nexport default function Routes() {\r\n    return (\r\n        <Switch>\r\n            <Route exact path={routeLinks.login} component={Login} />\r\n            <Route exact path={routeLinks.signUp} component={SignUp} />\r\n\r\n            {/* private routes */}\r\n            <UserPrivateRouter exact path={routeLinks.index} component={Dashboard} />\r\n            <UserPrivateRouter exact path={routeLinks.editProfile} component={EditProfile} />\r\n            <UserPrivateRouter exact path={routeLinks.changePassword} component={ChangePassword} />\r\n            <UserPrivateRouter exact path={routeLinks.transfer} component={Transfer} />\r\n            <UserPrivateRouter exact path={routeLinks.accounts} component={Accounts} />\r\n            <UserPrivateRouter exact path={`${routeLinks.accounts}/create`} component={CreateAccount} />\r\n            <UserPrivateRouter exact path={routeLinks.account} component={FundAccount} />\r\n            <UserPrivateRouter exact path={`${routeLinks.account}/:account_number`} component={Account} />\r\n            <UserPrivateRouter exact path={routeLinks.transactions} component={Transactions} />\r\n            <UserPrivateRouter exact path={`${routeLinks.transaction}/:transaction_ref`} component={Transaction} />\r\n\r\n            {/* 404 page */}\r\n            <Route component={Page404} />\r\n        </Switch>\r\n    )\r\n}","import Axios from \"axios\";\r\nimport { showNotification } from \"../../components/includes/Notifications\";\r\nimport { apiLinks } from \"../../routes/ApiLinks\";\r\nimport { SET_WEBSITE, WEBSITE_DEFAULT } from \"../reducers/types\";\r\n\r\nexport const websiteDefault = () => {\r\n    return {\r\n        type: WEBSITE_DEFAULT\r\n    }\r\n}\r\n\r\nexport const getWebsite = () => {\r\n    return (dispatch) => {\r\n        return Axios.get(apiLinks.website).then(\r\n            response => {\r\n                let data = response.data\r\n\r\n                if (data.status === 'success') {\r\n                    return dispatch({\r\n                        type: SET_WEBSITE,\r\n                        banks: data.banks,\r\n                        account_types: data.account_types\r\n                    })\r\n\r\n                }\r\n                else {\r\n                    return dispatch({\r\n                        type: WEBSITE_DEFAULT\r\n                    })\r\n                }\r\n            }\r\n        ).catch(\r\n            error => {\r\n                let message = (error.response && error.response.data && error.response.data.message) || error.message\r\n\r\n                showNotification(message, 'danger');\r\n\r\n                return dispatch({\r\n                    type: WEBSITE_DEFAULT\r\n                })\r\n            }\r\n        )\r\n    }\r\n}","import React, { Component, Fragment } from 'react'\r\nimport Routes from './routes/Routes'\r\nimport { connect } from 'react-redux'\r\nimport { userProfile } from './store/actions/profileActions'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport { Loader } from './components/layouts/CustomLayouts'\r\nimport PropTypes from 'prop-types'\r\nimport { getWebsite } from './store/actions/websiteActions'\r\n\r\nexport class App extends Component {\r\n\r\n    componentDidMount = () => {\r\n        this.props.userProfile()\r\n        this.props.getWebsite()\r\n    }\r\n\r\n    render() {\r\n        const { userLoading, websiteLoading } = this.props\r\n\r\n        return (\r\n            <Fragment>\r\n                {\r\n                    !userLoading && !websiteLoading ? <Routes /> :\r\n                        <Container>\r\n                            <Row className=\"vh-100\">\r\n                                <Col className=\"my-auto\">\r\n                                    <Loader />\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                }\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        userProfile: () => dispatch(userProfile()),\r\n        getWebsite: () => dispatch(getWebsite())\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ users, app }) => {\r\n    return {\r\n        userLoading: users.auth.userLoading,\r\n        websiteLoading: app.website.websiteLoading\r\n    }\r\n}\r\n\r\nApp.propTypes = {\r\n    userLoading: PropTypes.bool,\r\n    websiteLoading: PropTypes.bool,\r\n    userProfile: PropTypes.func,\r\n    getWebsite: PropTypes.func,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","import { Component } from 'react'\r\nimport { withRouter } from 'react-router'\r\n\r\nclass ScrollToTop extends Component {\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.location.pathname !== prevProps.location.pathname) {\r\n            window.scrollTo(0, 0);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import { ACCOUNTS_DEFAULT, ACCOUNT_DEFAULT, SET_ACCOUNT, SET_ACCOUNTS } from \"./types\"\r\n\r\nconst initialState = {\r\n    account: false,\r\n    accounts: false\r\n}\r\n\r\nconst accountsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ACCOUNTS_DEFAULT:\r\n            return accountsDefault(state)\r\n        case ACCOUNT_DEFAULT:\r\n            return accountDefault(state)\r\n        case SET_ACCOUNTS:\r\n            return setAccounts(state, action)\r\n        case SET_ACCOUNT:\r\n            return setAccount(state, action)\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst setAccounts = (state, action) => {\r\n    return {\r\n        ...state,\r\n        accounts: action.accounts\r\n    }\r\n}\r\n\r\nconst setAccount = (state, action) => {\r\n    return {\r\n        ...state,\r\n        account: action.account\r\n    }\r\n}\r\n\r\nconst accountsDefault = (state) => {\r\n    return {\r\n        ...state,\r\n        accounts: false\r\n    }\r\n}\r\n\r\nconst accountDefault = (state) => {\r\n    return {\r\n        ...state,\r\n        account: false\r\n    }\r\n}\r\n\r\nexport default accountsReducer","import { AUTH_DEFAULT, SET_USER } from \"./types\"\r\n\r\nconst initialState = {\r\n    userLoading: true,\r\n    user: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case AUTH_DEFAULT:\r\n            return authDefault(state)\r\n        case SET_USER:\r\n            return setUser(state, action)\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst setUser = (state, action) => {\r\n    return {\r\n        ...state,\r\n        userLoading: false,\r\n        user: action.user\r\n    }\r\n}\r\n\r\nconst authDefault = (state) => {\r\n    return {\r\n        ...state,\r\n        userLoading: true,\r\n        user: false\r\n    }\r\n}\r\n\r\nexport default authReducer","import { DASHBOARD_DEFAULT, SET_DASHBOARD } from \"./types\"\r\n\r\nconst initialState = {\r\n    loaded: false,\r\n    transactions: false,\r\n    accounts: false,\r\n    balance: false,\r\n    recent_transactions: false\r\n}\r\n\r\nconst dashboardReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case DASHBOARD_DEFAULT:\r\n            return dashboardDefault(state)\r\n        case SET_DASHBOARD:\r\n            return setDashboard(state, action)\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst setDashboard = (state, action) => {\r\n    return {\r\n        ...state,\r\n        loaded: true,\r\n        transactions: action.transactions,\r\n        accounts: action.accounts,\r\n        balance: action.balance,\r\n        recent_transactions: action.recent_transactions\r\n    }\r\n}\r\n\r\nconst dashboardDefault = (state) => {\r\n    return {\r\n        ...state,\r\n        loaded: false,\r\n        transactions: false,\r\n        accounts: false,\r\n        balance: false,\r\n        recent_transactions: false\r\n    }\r\n}\r\n\r\nexport default dashboardReducer","import { FORM_DEFAULT, FORM_ERROR, FORM_SUCCESS } from \"./types\";\r\n\r\nconst initialState = {\r\n    formError: false,\r\n    formSuccess: false\r\n}\r\n\r\nconst formReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FORM_DEFAULT:\r\n            return formDefault(state)\r\n        case FORM_ERROR:\r\n            return formError(state, action)\r\n        case FORM_SUCCESS:\r\n            return formSuccess(state, action)\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst formSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        formError: false,\r\n        formSuccess: action.message,\r\n    }\r\n}\r\n\r\nconst formError = (state, action) => {\r\n    return {\r\n        ...state,\r\n        formSuccess: false,\r\n        formError: action.message\r\n    }\r\n}\r\n\r\nconst formDefault = (state) => {\r\n    return {\r\n        ...state,\r\n        formError: false,\r\n        formSuccess: false,\r\n    }\r\n}\r\n\r\nexport default formReducer","import { SET_TRANSACTIONS, TRANSACTIONS_DEFAULT, TRANSACTION_DEFAULT, SET_TRANSACTION } from \"./types\"\r\n\r\nconst initialState = {\r\n    transaction: false,\r\n    transactions: false\r\n}\r\n\r\nconst transactionsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case TRANSACTIONS_DEFAULT:\r\n            return transactionsDefault(state)\r\n        case TRANSACTION_DEFAULT:\r\n            return transactionDefault(state)\r\n        case SET_TRANSACTIONS:\r\n            return setTransactions(state, action)\r\n        case SET_TRANSACTION:\r\n            return setTransaction(state, action)\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst setTransactions = (state, action) => {\r\n    return {\r\n        ...state,\r\n        transactions: action.transactions\r\n    }\r\n}\r\n\r\nconst setTransaction = (state, action) => {\r\n    return {\r\n        ...state,\r\n        transaction: action.transaction\r\n    }\r\n}\r\n\r\nconst transactionsDefault = (state) => {\r\n    return {\r\n        ...state,\r\n        transactions: false\r\n    }\r\n}\r\n\r\nconst transactionDefault = (state) => {\r\n    return {\r\n        ...state,\r\n        transaction: false\r\n    }\r\n}\r\n\r\nexport default transactionsReducer","import { SET_WEBSITE, WEBSITE_DEFAULT } from \"./types\"\r\n\r\nconst initialState = {\r\n    websiteLoading: true,\r\n    banks: false,\r\n    account_types: false,\r\n}\r\n\r\nconst websiteReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case WEBSITE_DEFAULT:\r\n            return websiteDefault(state)\r\n        case SET_WEBSITE:\r\n            return setWebsite(state, action)\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst setWebsite = (state, action) => {\r\n    return {\r\n        ...state,\r\n        websiteLoading: false,\r\n        banks: action.banks,\r\n        account_types: action.account_types\r\n    }\r\n}\r\n\r\nconst websiteDefault = (state) => {\r\n    return {\r\n        ...state,\r\n        websiteLoading: true,\r\n        banks: false,\r\n        account_types: false,\r\n    }\r\n}\r\n\r\nexport default websiteReducer","import { combineReducers } from 'redux'\r\nimport accountsReducer from './accountsReducer'\r\nimport authReducer from './authReducer'\r\nimport dashboardReducer from './dashboardReducer'\r\nimport formReducer from './formReducer'\r\nimport transactionsReducer from './transactionsReducer'\r\nimport websiteReducer from './websiteReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    app: combineReducers({\r\n        form: formReducer,\r\n        website: websiteReducer\r\n    }),\r\n    users: combineReducers({\r\n        auth: authReducer,\r\n        dashboard: dashboardReducer,\r\n        transactions: transactionsReducer,\r\n        accounts: accountsReducer,\r\n    }),\r\n})\r\n\r\nexport default rootReducer","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport HttpsRedirect from 'react-https-redirect';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport ScrollToTop from './components/includes/ScrollToTop';\r\nimport rootReducer from './store/reducers/rootReducer';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './includes/custom.css'\r\nimport './includes/parsley.css'\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nReactDOM.render(\r\n    <HttpsRedirect>\r\n        <Provider store={store}>\r\n            <Router>\r\n                <ScrollToTop>\r\n                    <App />\r\n                </ScrollToTop>\r\n            </Router>\r\n        </Provider>\r\n    </HttpsRedirect>\r\n    , document.getElementById('root'));"],"sourceRoot":""}